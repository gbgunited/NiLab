(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    304703,       6298]
NotebookOptionsPosition[    301855,       6197]
NotebookOutlinePosition[    302232,       6213]
CellTagsIndexPosition[    302189,       6210]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
individual gaussians fit gives nbar closer to what I measured before with \
rnr, 12-14uK. so don\[CloseCurlyQuote]t use the fitted offset from the RSB \
for the BSB and vice versa. 

BSB1, RSB1 = after PGC
RSB2, BSB2 = after raman cooling\
\>", "Chapter",
 CellChangeTimes->{{3.6712578951753454`*^9, 3.6712579242433867`*^9}, {
  3.6712591529452424`*^9, 3.671259169545266*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kHz", "=", 
   SuperscriptBox["10", "3"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nm", "=", 
   SuperscriptBox["10", 
    RowBox[{"-", "9"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mK", "=", 
   SuperscriptBox["10", 
    RowBox[{"-", "3"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uK", "=", 
   SuperscriptBox["10", 
    RowBox[{"-", "6"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"us", "=", 
   SuperscriptBox["10", 
    RowBox[{"-", "6"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kB", "=", 
   RowBox[{"1.38064852", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "23"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[HBar]", "=", 
   RowBox[{"1.0545718", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "34"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amu", "=", 
   RowBox[{"1.66054", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "27"}]]}]}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Lambda]trap", "=", 
    RowBox[{"970", " ", "nm"}]}], ";"}],
  Background->RGBColor[1, 1, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"m", "=", 
    RowBox[{"132.90545", " ", "amu"}]}], ";"}],
  Background->RGBColor[1, 1, 0]]}], "Input",
 CellChangeTimes->{{3.671256554152257*^9, 3.6712565720242825`*^9}, {
  3.6712566787714424`*^9, 3.6712566789014425`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["import data; add offset to carrier.", "Chapter",
 CellChangeTimes->{{3.6712496849309907`*^9, 3.671249685842993*^9}, {
  3.671259672801996*^9, 3.671259676152001*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"carrier0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "64.`"}], ",", "0.13978494623655913`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.03213858175998931`"}], ",", 
          "0.039802731840062555`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "40.`"}], ",", "0.15625`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.03349254603917502`"}], ",", 
          "0.04058017490515445`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "24.`"}], ",", "0.08333333333333333`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.024094006257488483`"}], ",", 
          "0.03268507154958472`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "16.`"}], ",", "0.26666666666666666`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.043863656060683404`"}], ",", 
          "0.048991861188888486`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "8.`"}], ",", "0.616822429906542`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.04787505738731046`"}], ",", 
          "0.04571167905570783`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.`", ",", "0.8850574712643678`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.0386565153778774`"}], ",", "0.02990520921277806`"}],
          "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8.`", ",", "0.7403846153846154`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.04513634392819854`"}], ",", 
          "0.04055758934944398`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"16.`", ",", "0.37`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.04677093504757068`"}], ",", 
          "0.04934519247331326`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"24.`", ",", "0.11538461538461539`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.027730027635261292`"}], ",", 
          "0.035056034961268606`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"40.`", ",", "0.15306122448979592`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.0328509003551469`"}], ",", 
          "0.039859764506868234`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"64.`", ",", "0.06666666666666667`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.02181696693578277`"}], ",", 
          "0.03134077645959228`"}], "}"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"carrierx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"carrier0", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "1"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "1"}], "]"}], "]"}], "-", "8"}]}], " ", ";", 
  RowBox[{"(*", 
   RowBox[{
   "x", " ", "offset", " ", "of", " ", "carrier", " ", "scan", " ", "vs", " ",
     "sidebands"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"carrier", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"carrierx", ",", 
      RowBox[{
       RowBox[{"carrier0", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"carrier", "=", 
    RowBox[{"Thread", "[", 
     RowBox[{"{", 
      RowBox[{"carrier", ",", 
       RowBox[{"carrier0", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"survival1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "103.`"}], ",", "0.042735042735042736`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.011390832739255924`"}], ",", 
          "0.015282449396830024`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "98.`"}], ",", "0.06986899563318777`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.015042906480325767`"}], ",", 
          "0.018783176083515457`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "93.`"}], ",", "0.13513513513513514`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.021315393112750505`"}], ",", 
          "0.024587723739341205`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "88.`"}], ",", "0.23684210526315788`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.026968676802027164`"}], ",", 
          "0.029266999026803103`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "83.`"}], ",", "0.5113122171945701`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.033600207758771705`"}], ",", 
          "0.03349829589215403`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "78.`"}], ",", "0.5546558704453441`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.031780926276894106`"}], ",", 
          "0.0313401531281412`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "73.`"}], ",", "0.273972602739726`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.029059132164071244`"}], ",", 
          "0.031113926684619264`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "68.`"}], ",", "0.23809523809523808`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.026856746110424573`"}], ",", 
          "0.029114545782017387`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "63.`"}], ",", "0.12350597609561753`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.019285882926979067`"}], ",", 
          "0.02227393073574402`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "58.`"}], ",", "0.09090909090909091`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.017192841096295847`"}], ",", 
          "0.020719486864320916`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "53.`"}], ",", "0.0963302752293578`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.018178985914218668`"}], ",", 
          "0.021865467418973383`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "0.05286343612334802`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.012986999061439602`"}], ",", 
          "0.016909249621761095`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"55.`", ",", "0.045454545454545456`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01162211443459072`"}], ",", 
          "0.015363229286816688`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"60.`", ",", "0.05752212389380531`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01362717574929638`"}], ",", 
          "0.017525659239218817`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"65.`", ",", "0.08438818565400844`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.016356216664197218`"}], ",", 
          "0.019848752919205556`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"70.`", ",", "0.13852813852813853`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.021175517149636017`"}], ",", 
          "0.024291653886462428`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"75.`", ",", "0.16736401673640167`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.022750290487743657`"}], ",", 
          "0.02552225701494032`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"80.`", ",", "0.27615062761506276`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.027942041327701145`"}], ",", 
          "0.029807452764242237`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"85.`", ",", "0.33624454148471616`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.030446851312356082`"}], ",", 
          "0.031870811821184675`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"90.`", ",", "0.1762114537444934`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.023852146335756108`"}], ",", 
          "0.02669239674150614`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"95.`", ",", "0.18502202643171806`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.02437241471414145`"}], ",", 
          "0.027135379394565007`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"100.`", ",", "0.11013215859030837`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01909298406838586`"}], ",", 
          "0.02251287741408492`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"105.`", ",", "0.06521739130434782`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.014471917444882486`"}], ",", 
          "0.018236269035321037`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"110.`", ",", "0.045081967213114756`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.011528270056928733`"}], ",", 
          "0.015241886651107373`"}], "}"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"survival2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "103.`"}], ",", "0.05847953216374269`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01550796954595974`"}], ",", 
          "0.020641928474288307`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "98.`"}], ",", "0.011976047904191617`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.005976015796766543`"}], ",", 
          "0.011785824750288072`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "93.`"}], ",", "0.06741573033707865`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.016479732520559433`"}], ",", 
          "0.021313076315675875`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "88.`"}], ",", "0.22282608695652173`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.02913383328796318`"}], ",", 
          "0.03213030802356842`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "83.`"}], ",", "0.42134831460674155`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.03646970918799003`"}], ",", 
          "0.037348498968920285`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "78.`"}], ",", "0.4228571428571429`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.03680190913051784`"}], ",", 
          "0.03767853250714115`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "73.`"}], ",", "0.23391812865497075`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.030767965274431958`"}], ",", 
          "0.033861940522629974`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "68.`"}], ",", "0.15757575757575756`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.026290821280784804`"}], ",", 
          "0.030416414563004646`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "63.`"}], ",", "0.046632124352331605`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.012980494976170126`"}], ",", 
          "0.01765439060140382`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "58.`"}], ",", "0.04`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01238679407095919`"}], ",", 
          "0.017614066798231916`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "53.`"}], ",", "0.023391812865497075`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.00908212172260171`"}], ",", 
          "0.014624077386956397`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50.`", ",", "0.060240963855421686`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.015965856335296215`"}], ",", 
          "0.021232431618464803`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"55.`", ",", "0.021621621621621623`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.008398336377056682`"}], ",", 
          "0.013542189908006992`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"60.`", ",", "0.011695906432748537`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.005836501532739878`"}], ",", 
          "0.011514456109103267`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"65.`", ",", "0.016666666666666666`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.007212823473295571`"}], ",", 
          "0.01255352328913351`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"70.`", ",", "0.010869565217391304`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.005424895135183499`"}], ",", 
          "0.01071279172742792`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"75.`", ",", "0.016666666666666666`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.007212823473295571`"}], ",", 
          "0.01255352328913351`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"80.`", ",", "0.022988505747126436`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.00892638420356883`"}], ",", 
          "0.014377944137887386`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"85.`", ",", "0.01910828025477707`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.008265279329569929`"}], ",", 
          "0.014352516288370216`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"90.`", ",", "0.017142857142857144`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.007418169867699555`"}], ",", 
          "0.012905182854712538`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"95.`", ",", "0.028409090909090908`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01010444931529815`"}], ",", 
          "0.015433160152483572`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"100.`", ",", "0.031088082901554404`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.010275772204812728`"}], ",", 
          "0.015109915680054438`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"105.`", ",", "0.023809523809523808`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.009243389532727242`"}], ",", 
          "0.014878779783502105`"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"110.`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", "0.006024096385542169`"}], "}"}], "]"}]}], 
      "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.671247346898612*^9, 3.671247349188615*^9}, {
   3.6712587843408623`*^9, 3.6712587918008723`*^9}, 3.6712588682206593`*^9, {
   3.671259037400076*^9, 3.671259058796107*^9}, {3.6712591163151894`*^9, 
   3.671259123917201*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.6711979677929115`*^9, 3.6712473336975937`*^9, 
  3.671259114883187*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["separate into RSB, BSB", "Chapter",
 CellChangeTimes->{{3.6712480879156675`*^9, 3.6712480910256715`*^9}, {
  3.671251252234823*^9, 3.6712512592348337`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RSB1", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"survival1", ",", 
     RowBox[{"x_", "/;", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "<", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BSB1", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"survival1", ",", 
     RowBox[{"x_", "/;", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ">", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSB2", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"survival2", ",", 
     RowBox[{"x_", "/;", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "<", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BSB2", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"survival2", ",", 
     RowBox[{"x_", "/;", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ">", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ErrorListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"RSB1", ",", "RSB2", ",", "BSB1", ",", "BSB2"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", "Red", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<detRaman[kHz]\>\"", ",", "\"\<\>\""}], "}"}]}]}], 
  "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], LineBox[{{-103., 0.042735042735042736`}, {-98., 
      0.06986899563318777}, {-93., 0.13513513513513514`}, {-88., 
      0.23684210526315788`}, {-83., 0.5113122171945701}, {-78., 
      0.5546558704453441}, {-73., 0.273972602739726}, {-68., 
      0.23809523809523808`}, {-63., 0.12350597609561753`}, {-58., 
      0.09090909090909091}, {-53., 
      0.0963302752293578}}], {{
       LineBox[{{-103., 0.05801749213187276}, {-103., 0.03134420999578681}}], 
       LineBox[{
        Offset[{1.5, 0}, {-103., 0.05801749213187276}], 
         Offset[{-1.5, 0}, {-103., 0.05801749213187276}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-103., 0.03134420999578681}], 
         Offset[{-1.5, 0}, {-103., 0.03134420999578681}]}]}, {
       LineBox[{{-98., 0.08865217171670323}, {-98., 0.054826089152862}}], 
       LineBox[{
        Offset[{1.5, 0}, {-98., 0.08865217171670323}], 
         Offset[{-1.5, 0}, {-98., 0.08865217171670323}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-98., 0.054826089152862}], 
         Offset[{-1.5, 0}, {-98., 0.054826089152862}]}]}, {
       LineBox[{{-93., 0.15972285887447635`}, {-93., 0.11381974202238464`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-93., 0.15972285887447635`}], 
         Offset[{-1.5, 0}, {-93., 0.15972285887447635`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-93., 0.11381974202238464`}], 
         Offset[{-1.5, 0}, {-93., 0.11381974202238464`}]}]}, {
       LineBox[{{-88., 0.266109104289961}, {-88., 0.20987342846113072`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-88., 0.266109104289961}], 
         Offset[{-1.5, 0}, {-88., 0.266109104289961}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-88., 0.20987342846113072`}], 
         Offset[{-1.5, 0}, {-88., 0.20987342846113072`}]}]}, {
       LineBox[{{-83., 0.5448105130867241}, {-83., 0.4777120094357984}}], 
       LineBox[{
        Offset[{1.5, 0}, {-83., 0.5448105130867241}], 
         Offset[{-1.5, 0}, {-83., 0.5448105130867241}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-83., 0.4777120094357984}], 
         Offset[{-1.5, 0}, {-83., 0.4777120094357984}]}]}, {
       LineBox[{{-78., 0.5859960235734853}, {-78., 0.52287494416845}}], 
       LineBox[{
        Offset[{1.5, 0}, {-78., 0.5859960235734853}], 
         Offset[{-1.5, 0}, {-78., 0.5859960235734853}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-78., 0.52287494416845}], 
         Offset[{-1.5, 0}, {-78., 0.52287494416845}]}]}, {
       LineBox[{{-73., 0.3050865294243453}, {-73., 0.24491347057565477`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-73., 0.3050865294243453}], 
         Offset[{-1.5, 0}, {-73., 0.3050865294243453}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-73., 0.24491347057565477`}], 
         Offset[{-1.5, 0}, {-73., 0.24491347057565477`}]}]}, {
       LineBox[{{-68., 0.26720978387725547`}, {-68., 0.2112384919848135}}], 
       LineBox[{
        Offset[{1.5, 0}, {-68., 0.26720978387725547`}], 
         Offset[{-1.5, 0}, {-68., 0.26720978387725547`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-68., 0.2112384919848135}], 
         Offset[{-1.5, 0}, {-68., 0.2112384919848135}]}]}, {
       LineBox[{{-63., 0.14577990683136155`}, {-63., 0.10422009316863846`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-63., 0.14577990683136155`}], 
         Offset[{-1.5, 0}, {-63., 0.14577990683136155`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-63., 0.10422009316863846`}], 
         Offset[{-1.5, 0}, {-63., 0.10422009316863846`}]}]}, {
       LineBox[{{-58., 0.11162857777341183`}, {-58., 0.07371624981279506}}], 
       LineBox[{
        Offset[{1.5, 0}, {-58., 0.11162857777341183`}], 
         Offset[{-1.5, 0}, {-58., 0.11162857777341183`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-58., 0.07371624981279506}], 
         Offset[{-1.5, 0}, {-58., 0.07371624981279506}]}]}, {
       LineBox[{{-53., 0.11819574264833119`}, {-53., 0.07815128931513914}}], 
       LineBox[{
        Offset[{1.5, 0}, {-53., 0.11819574264833119`}], 
         Offset[{-1.5, 0}, {-53., 0.11819574264833119`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-53., 0.07815128931513914}], 
         Offset[{-1.5, 0}, {-53., 0.07815128931513914}]}]}}}, 
    {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], LineBox[{{-103., 0.05847953216374269}, {-98., 
      0.011976047904191617`}, {-93., 0.06741573033707865}, {-88., 
      0.22282608695652173`}, {-83., 0.42134831460674155`}, {-78., 
      0.4228571428571429}, {-73., 0.23391812865497075`}, {-68., 
      0.15757575757575756`}, {-63., 0.046632124352331605`}, {-58., 
      0.04}, {-53., 
      0.023391812865497075`}}], {{
       LineBox[{{-103., 0.079121460638031}, {-103., 0.04297156261778295}}], 
       LineBox[{
        Offset[{1.5, 0}, {-103., 0.079121460638031}], 
         Offset[{-1.5, 0}, {-103., 0.079121460638031}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-103., 0.04297156261778295}], 
         Offset[{-1.5, 0}, {-103., 0.04297156261778295}]}]}, {
       LineBox[{{-98., 0.02376187265447969}, {-98., 0.006000032107425075}}], 
       LineBox[{
        Offset[{1.5, 0}, {-98., 0.02376187265447969}], 
         Offset[{-1.5, 0}, {-98., 0.02376187265447969}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-98., 0.006000032107425075}], 
         Offset[{-1.5, 0}, {-98., 0.006000032107425075}]}]}, {
       LineBox[{{-93., 0.08872880665275452}, {-93., 0.05093599781651922}}], 
       LineBox[{
        Offset[{1.5, 0}, {-93., 0.08872880665275452}], 
         Offset[{-1.5, 0}, {-93., 0.08872880665275452}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-93., 0.05093599781651922}], 
         Offset[{-1.5, 0}, {-93., 0.05093599781651922}]}]}, {
       LineBox[{{-88., 0.25495639498009015`}, {-88., 0.19369225366855855`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-88., 0.25495639498009015`}], 
         Offset[{-1.5, 0}, {-88., 0.25495639498009015`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-88., 0.19369225366855855`}], 
         Offset[{-1.5, 0}, {-88., 0.19369225366855855`}]}]}, {
       LineBox[{{-83., 0.45869681357566183`}, {-83., 0.3848786054187515}}], 
       LineBox[{
        Offset[{1.5, 0}, {-83., 0.45869681357566183`}], 
         Offset[{-1.5, 0}, {-83., 0.45869681357566183`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-83., 0.3848786054187515}], 
         Offset[{-1.5, 0}, {-83., 0.3848786054187515}]}]}, {
       LineBox[{{-78., 0.460535675364284}, {-78., 0.38605523372662504`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-78., 0.460535675364284}], 
         Offset[{-1.5, 0}, {-78., 0.460535675364284}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-78., 0.38605523372662504`}], 
         Offset[{-1.5, 0}, {-78., 0.38605523372662504`}]}]}, {
       LineBox[{{-73., 0.2677800691776007}, {-73., 0.2031501633805388}}], 
       LineBox[{
        Offset[{1.5, 0}, {-73., 0.2677800691776007}], 
         Offset[{-1.5, 0}, {-73., 0.2677800691776007}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-73., 0.2031501633805388}], 
         Offset[{-1.5, 0}, {-73., 0.2031501633805388}]}]}, {
       LineBox[{{-68., 0.1879921721387622}, {-68., 0.13128493629497276`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-68., 0.1879921721387622}], 
         Offset[{-1.5, 0}, {-68., 0.1879921721387622}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-68., 0.13128493629497276`}], 
         Offset[{-1.5, 0}, {-68., 0.13128493629497276`}]}]}, {
       LineBox[{{-63., 0.06428651495373543}, {-63., 0.03365162937616148}}], 
       LineBox[{
        Offset[{1.5, 0}, {-63., 0.06428651495373543}], 
         Offset[{-1.5, 0}, {-63., 0.06428651495373543}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-63., 0.03365162937616148}], 
         Offset[{-1.5, 0}, {-63., 0.03365162937616148}]}]}, {
       LineBox[{{-58., 0.05761406679823192}, {-58., 0.02761320592904081}}], 
       LineBox[{
        Offset[{1.5, 0}, {-58., 0.05761406679823192}], 
         Offset[{-1.5, 0}, {-58., 0.05761406679823192}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-58., 0.02761320592904081}], 
         Offset[{-1.5, 0}, {-58., 0.02761320592904081}]}]}, {
       LineBox[{{-53., 0.03801589025245347}, {-53., 0.014309691142895365`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-53., 0.03801589025245347}], 
         Offset[{-1.5, 0}, {-53., 0.03801589025245347}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-53., 0.014309691142895365`}], 
         Offset[{-1.5, 0}, {-53., 0.014309691142895365`}]}]}}}, 
    {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], LineBox[{{50., 0.05286343612334802}, {55., 
      0.045454545454545456`}, {60., 0.05752212389380531}, {65., 
      0.08438818565400844}, {70., 0.13852813852813853`}, {75., 
      0.16736401673640167`}, {80., 0.27615062761506276`}, {85., 
      0.33624454148471616`}, {90., 0.1762114537444934}, {95., 
      0.18502202643171806`}, {100., 0.11013215859030837`}, {105., 
      0.06521739130434782}, {110., 
      0.045081967213114756`}}], {{
       LineBox[{{50., 0.06977268574510911}, {50., 0.03987643706190842}}], 
       LineBox[{
        Offset[{1.5, 0}, {50., 0.06977268574510911}], 
         Offset[{-1.5, 0}, {50., 0.06977268574510911}]}], 
       LineBox[{
        Offset[{1.5, 0}, {50., 0.03987643706190842}], 
         Offset[{-1.5, 0}, {50., 0.03987643706190842}]}]}, {
       LineBox[{{55., 0.06081777474136214}, {55., 0.033832431019954735`}}], 
       LineBox[{
        Offset[{1.5, 0}, {55., 0.06081777474136214}], 
         Offset[{-1.5, 0}, {55., 0.06081777474136214}]}], 
       LineBox[{
        Offset[{1.5, 0}, {55., 0.033832431019954735`}], 
         Offset[{-1.5, 0}, {55., 0.033832431019954735`}]}]}, {
       LineBox[{{60., 0.07504778313302413}, {60., 0.04389494814450893}}], 
       LineBox[{
        Offset[{1.5, 0}, {60., 0.07504778313302413}], 
         Offset[{-1.5, 0}, {60., 0.07504778313302413}]}], 
       LineBox[{
        Offset[{1.5, 0}, {60., 0.04389494814450893}], 
         Offset[{-1.5, 0}, {60., 0.04389494814450893}]}]}, {
       LineBox[{{65., 0.10423693857321399`}, {65., 0.06803196898981122}}], 
       LineBox[{
        Offset[{1.5, 0}, {65., 0.10423693857321399`}], 
         Offset[{-1.5, 0}, {65., 0.10423693857321399`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {65., 0.06803196898981122}], 
         Offset[{-1.5, 0}, {65., 0.06803196898981122}]}]}, {
       LineBox[{{70., 0.16281979241460096`}, {70., 0.11735262137850251`}}], 
       LineBox[{
        Offset[{1.5, 0}, {70., 0.16281979241460096`}], 
         Offset[{-1.5, 0}, {70., 0.16281979241460096`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {70., 0.11735262137850251`}], 
         Offset[{-1.5, 0}, {70., 0.11735262137850251`}]}]}, {
       LineBox[{{75., 0.19288627375134199`}, {75., 0.144613726248658}}], 
       LineBox[{
        Offset[{1.5, 0}, {75., 0.19288627375134199`}], 
         Offset[{-1.5, 0}, {75., 0.19288627375134199`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {75., 0.144613726248658}], 
         Offset[{-1.5, 0}, {75., 0.144613726248658}]}]}, {
       LineBox[{{80., 0.305958080379305}, {80., 0.24820858628736162`}}], 
       LineBox[{
        Offset[{1.5, 0}, {80., 0.305958080379305}], 
         Offset[{-1.5, 0}, {80., 0.305958080379305}]}], 
       LineBox[{
        Offset[{1.5, 0}, {80., 0.24820858628736162`}], 
         Offset[{-1.5, 0}, {80., 0.24820858628736162`}]}]}, {
       LineBox[{{85., 0.36811535330590084`}, {85., 0.3057976901723601}}], 
       LineBox[{
        Offset[{1.5, 0}, {85., 0.36811535330590084`}], 
         Offset[{-1.5, 0}, {85., 0.36811535330590084`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {85., 0.3057976901723601}], 
         Offset[{-1.5, 0}, {85., 0.3057976901723601}]}]}, {
       LineBox[{{90., 0.20290385048599954`}, {90., 0.1523593074087373}}], 
       LineBox[{
        Offset[{1.5, 0}, {90., 0.20290385048599954`}], 
         Offset[{-1.5, 0}, {90., 0.20290385048599954`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {90., 0.1523593074087373}], 
         Offset[{-1.5, 0}, {90., 0.1523593074087373}]}]}, {
       LineBox[{{95., 0.21215740582628306`}, {95., 0.1606496117175766}}], 
       LineBox[{
        Offset[{1.5, 0}, {95., 0.21215740582628306`}], 
         Offset[{-1.5, 0}, {95., 0.21215740582628306`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {95., 0.1606496117175766}], 
         Offset[{-1.5, 0}, {95., 0.1606496117175766}]}]}, {
       LineBox[{{100., 0.13264503600439329`}, {100., 0.0910391745219225}}], 
       LineBox[{
        Offset[{1.5, 0}, {100., 0.13264503600439329`}], 
         Offset[{-1.5, 0}, {100., 0.13264503600439329`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {100., 0.0910391745219225}], 
         Offset[{-1.5, 0}, {100., 0.0910391745219225}]}]}, {
       LineBox[{{105., 0.08345366033966886}, {105., 0.05074547385946534}}], 
       LineBox[{
        Offset[{1.5, 0}, {105., 0.08345366033966886}], 
         Offset[{-1.5, 0}, {105., 0.08345366033966886}]}], 
       LineBox[{
        Offset[{1.5, 0}, {105., 0.05074547385946534}], 
         Offset[{-1.5, 0}, {105., 0.05074547385946534}]}]}, {
       LineBox[{{110., 0.06032385386422213}, {110., 0.03355369715618602}}], 
       LineBox[{
        Offset[{1.5, 0}, {110., 0.06032385386422213}], 
         Offset[{-1.5, 0}, {110., 0.06032385386422213}]}], 
       LineBox[{
        Offset[{1.5, 0}, {110., 0.03355369715618602}], 
         Offset[{-1.5, 0}, {110., 0.03355369715618602}]}]}}}, 
    {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], 
     LineBox[{{50., 0.060240963855421686`}, {55., 0.021621621621621623`}, {
      60., 0.011695906432748537`}, {65., 0.016666666666666666`}, {70., 
      0.010869565217391304`}, {75., 0.016666666666666666`}, {80., 
      0.022988505747126436`}, {85., 0.01910828025477707}, {90., 
      0.017142857142857144`}, {95., 0.028409090909090908`}, {100., 
      0.031088082901554404`}, {105., 0.023809523809523808`}, {110., 
      0.}}], {{LineBox[{{50., 0.08147339547388649}, {50., 
        0.04427510752012547}}], 
       LineBox[{
        Offset[{1.5, 0}, {50., 0.08147339547388649}], 
         Offset[{-1.5, 0}, {50., 0.08147339547388649}]}], 
       LineBox[{
        Offset[{1.5, 0}, {50., 0.04427510752012547}], 
         Offset[{-1.5, 0}, {50., 0.04427510752012547}]}]}, {
       LineBox[{{55., 0.035163811529628615`}, {55., 0.01322328524456494}}], 
       LineBox[{
        Offset[{1.5, 0}, {55., 0.035163811529628615`}], 
         Offset[{-1.5, 0}, {55., 0.035163811529628615`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {55., 0.01322328524456494}], 
         Offset[{-1.5, 0}, {55., 0.01322328524456494}]}]}, {
       LineBox[{{60., 0.023210362541851805`}, {60., 0.005859404900008659}}], 
       LineBox[{
        Offset[{1.5, 0}, {60., 0.023210362541851805`}], 
         Offset[{-1.5, 0}, {60., 0.023210362541851805`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {60., 0.005859404900008659}], 
         Offset[{-1.5, 0}, {60., 0.005859404900008659}]}]}, {
       LineBox[{{65., 0.029220189955800176`}, {65., 0.009453843193371095}}], 
       LineBox[{
        Offset[{1.5, 0}, {65., 0.029220189955800176`}], 
         Offset[{-1.5, 0}, {65., 0.029220189955800176`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {65., 0.009453843193371095}], 
         Offset[{-1.5, 0}, {65., 0.009453843193371095}]}]}, {
       LineBox[{{70., 0.021582356944819223`}, {70., 0.005444670082207805}}], 
       LineBox[{
        Offset[{1.5, 0}, {70., 0.021582356944819223`}], 
         Offset[{-1.5, 0}, {70., 0.021582356944819223`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {70., 0.005444670082207805}], 
         Offset[{-1.5, 0}, {70., 0.005444670082207805}]}]}, {
       LineBox[{{75., 0.029220189955800176`}, {75., 0.009453843193371095}}], 
       LineBox[{
        Offset[{1.5, 0}, {75., 0.029220189955800176`}], 
         Offset[{-1.5, 0}, {75., 0.029220189955800176`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {75., 0.009453843193371095}], 
         Offset[{-1.5, 0}, {75., 0.009453843193371095}]}]}, {
       LineBox[{{80., 0.03736644988501382}, {80., 0.014062121543557607`}}], 
       LineBox[{
        Offset[{1.5, 0}, {80., 0.03736644988501382}], 
         Offset[{-1.5, 0}, {80., 0.03736644988501382}]}], 
       LineBox[{
        Offset[{1.5, 0}, {80., 0.014062121543557607`}], 
         Offset[{-1.5, 0}, {80., 0.014062121543557607`}]}]}, {
       LineBox[{{85., 0.033460796543147285`}, {85., 0.01084300092520714}}], 
       LineBox[{
        Offset[{1.5, 0}, {85., 0.033460796543147285`}], 
         Offset[{-1.5, 0}, {85., 0.033460796543147285`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {85., 0.01084300092520714}], 
         Offset[{-1.5, 0}, {85., 0.01084300092520714}]}]}, {
       LineBox[{{90., 0.03004803999756968}, {90., 0.009724687275157589}}], 
       LineBox[{
        Offset[{1.5, 0}, {90., 0.03004803999756968}], 
         Offset[{-1.5, 0}, {90., 0.03004803999756968}]}], 
       LineBox[{
        Offset[{1.5, 0}, {90., 0.009724687275157589}], 
         Offset[{-1.5, 0}, {90., 0.009724687275157589}]}]}, {
       LineBox[{{95., 0.04384225106157448}, {95., 0.018304641593792758`}}], 
       LineBox[{
        Offset[{1.5, 0}, {95., 0.04384225106157448}], 
         Offset[{-1.5, 0}, {95., 0.04384225106157448}]}], 
       LineBox[{
        Offset[{1.5, 0}, {95., 0.018304641593792758`}], 
         Offset[{-1.5, 0}, {95., 0.018304641593792758`}]}]}, {
       LineBox[{{100., 0.04619799858160884}, {100., 0.020812310696741675`}}], 
       LineBox[{
        Offset[{1.5, 0}, {100., 0.04619799858160884}], 
         Offset[{-1.5, 0}, {100., 0.04619799858160884}]}], 
       LineBox[{
        Offset[{1.5, 0}, {100., 0.020812310696741675`}], 
         Offset[{-1.5, 0}, {100., 0.020812310696741675`}]}]}, {
       LineBox[{{105., 0.03868830359302591}, {105., 0.014566134276796566`}}], 
       LineBox[{
        Offset[{1.5, 0}, {105., 0.03868830359302591}], 
         Offset[{-1.5, 0}, {105., 0.03868830359302591}]}], 
       LineBox[{
        Offset[{1.5, 0}, {105., 0.014566134276796566`}], 
         Offset[{-1.5, 0}, {105., 0.014566134276796566`}]}]}, {
       LineBox[{{110., 0.006024096385542169}, {110., 0.}}], 
       LineBox[{
        Offset[{1.5, 0}, {110., 0.006024096385542169}], 
         Offset[{-1.5, 0}, {110., 0.006024096385542169}]}], 
       LineBox[{
        Offset[{1.5, 0}, {110., 0.}], Offset[{-1.5, 0}, {110., 0.}]}]}}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], None}, {
     FormBox["\"detRaman[kHz]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-103., 110.}, {0, 0.5546558704453441}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.671248061225629*^9, 3.671256484032154*^9, {3.6712565365962296`*^9, 
   3.6712565780302916`*^9}, 3.671256685781454*^9, 3.6712575929647765`*^9, 
   3.6712590633181133`*^9, {3.67125910278117*^9, 3.671259134637216*^9}, {
   3.6712596290479293`*^9, 3.671259642220949*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["fit (using independent gaussians for each peak)", "Title",
 CellChangeTimes->{{3.6712480837956614`*^9, 3.6712480846856623`*^9}, {
  3.6712496893310003`*^9, 3.6712496947930145`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fits", "=", 
   RowBox[{
    RowBox[{"Reap", "[", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"dataaa1", ",", "signf"}], "}"}], "=", "ii"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dataaa", "=", 
         RowBox[{"dataaa1", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"gauss", "=", 
         RowBox[{"offs", "-", 
          RowBox[{"A", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"f", "-", "f0"}], ")"}], "2"], 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]}], "]"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        StyleBox[
         RowBox[{
          RowBox[{"{", 
           RowBox[{"offs0", ",", "A0", ",", "f00", ",", "\[Sigma]0"}], "}"}], 
          "=", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", ".3"}], ",", 
            RowBox[{"signf", 
             StyleBox[
              RowBox[{" ", " "}]], "80"}], ",", "10"}], "}"}]}],
         Background->RGBColor[1, 1, 0]], 
        StyleBox[";",
         Background->RGBColor[1, 1, 0]], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"nlm", "=", 
         RowBox[{"NonlinearModelFit", "[", 
          RowBox[{"dataaa", ",", "gauss", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"offs", ",", "offs0"}], "}"}], ",", 
             RowBox[{"{", " ", 
              RowBox[{"A", ",", "A0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"f0", ",", "f00"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Sigma]", ",", "\[Sigma]0"}], "}"}]}], "}"}], ",", 
           "f"}], 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"Weights", "\[Rule]", "weights"}]}], "*)"}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"fit", "=", 
         RowBox[{"nlm", "[", "\"\<BestFitParameters\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"a", "=", 
         RowBox[{"Show", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Plot", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gauss", "/.", "fit"}], ",", 
              RowBox[{"{", 
               RowBox[{"f", ",", 
                RowBox[{"survival1", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"survival1", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "1", ",", "1"}], "]"}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", ".01", "]"}], ",", "Blue"}], 
                "}"}]}], ",", 
              RowBox[{"Frame", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"Axes", "\[Rule]", "False"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"knobStr", ",", "\"\<survival rate\>\""}], "}"}]}], 
              ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{"\"\<f0, \[Sigma] = \>\"", " ", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"f0", "/.", "fit"}], "]"}], "<>", "\"\<, \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"\[Sigma]", "/.", "fit"}], "]"}]}]}]}], " ", 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"ErrorListPlot", "[", "dataaa1", "]"}]}], 
           "\[IndentingNewLine]", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Sow", "[", 
         RowBox[{"{", 
          RowBox[{"fit", ",", "a"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"RSB1", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"RSB2", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"BSB1", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{"fits", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "2"}], "]"}], "]"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fitRSB1", ",", "fitRSB2", ",", "fitBSB1"}], "}"}], "=", 
   RowBox[{"fits", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.671248116284707*^9, 3.671248183873803*^9}, {
  3.6712564949321694`*^9, 3.6712565314252214`*^9}, {3.6712566079063344`*^9, 
  3.671256624756359*^9}, {3.671256692551464*^9, 3.671256702208479*^9}, {
  3.6712575972957826`*^9, 3.671257606886796*^9}, {3.671259069538122*^9, 
  3.6712590912991533`*^9}, {3.6712591393072224`*^9, 3.6712591412672253`*^9}, {
  3.6712592220743465`*^9, 3.671259382080575*^9}, {3.6712594244376354`*^9, 
  3.6712595556738243`*^9}, {3.671259633768936*^9, 3.6712596361309404`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {}, 
        {RGBColor[0, 0, 1], Thickness[0.01], Opacity[1.], 
         LineBox[CompressedData["
1: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
          "]]}}, {{}, {{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.019444444444444445`], AbsoluteThickness[1.6], 
          PointBox[{{-103., 0.042735042735042736`}, {-98., 
           0.06986899563318777}, {-93., 0.13513513513513514`}, {-88., 
           0.23684210526315788`}, {-83., 0.5113122171945701}, {-78., 
           0.5546558704453441}, {-73., 0.273972602739726}, {-68., 
           0.23809523809523808`}, {-63., 0.12350597609561753`}, {-58., 
           0.09090909090909091}, {-53., 
           0.0963302752293578}}], {{
            LineBox[{{-103., 0.05801749213187276}, {-103., 
             0.03134420999578681}}], 
            LineBox[{
             Offset[{1.5, 0}, {-103., 0.05801749213187276}], 
              Offset[{-1.5, 0}, {-103., 0.05801749213187276}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-103., 0.03134420999578681}], 
              Offset[{-1.5, 0}, {-103., 0.03134420999578681}]}]}, {
            LineBox[{{-98., 0.08865217171670323}, {-98., 0.054826089152862}}],
             LineBox[{
             Offset[{1.5, 0}, {-98., 0.08865217171670323}], 
              Offset[{-1.5, 0}, {-98., 0.08865217171670323}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-98., 0.054826089152862}], 
              Offset[{-1.5, 0}, {-98., 0.054826089152862}]}]}, {
            LineBox[{{-93., 0.15972285887447635`}, {-93., 
             0.11381974202238464`}}], 
            LineBox[{
             Offset[{1.5, 0}, {-93., 0.15972285887447635`}], 
              Offset[{-1.5, 0}, {-93., 0.15972285887447635`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-93., 0.11381974202238464`}], 
              Offset[{-1.5, 0}, {-93., 0.11381974202238464`}]}]}, {
            LineBox[{{-88., 0.266109104289961}, {-88., 
             0.20987342846113072`}}], 
            LineBox[{
             Offset[{1.5, 0}, {-88., 0.266109104289961}], 
              Offset[{-1.5, 0}, {-88., 0.266109104289961}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-88., 0.20987342846113072`}], 
              Offset[{-1.5, 0}, {-88., 0.20987342846113072`}]}]}, {
            LineBox[{{-83., 0.5448105130867241}, {-83., 0.4777120094357984}}],
             LineBox[{
             Offset[{1.5, 0}, {-83., 0.5448105130867241}], 
              Offset[{-1.5, 0}, {-83., 0.5448105130867241}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-83., 0.4777120094357984}], 
              Offset[{-1.5, 0}, {-83., 0.4777120094357984}]}]}, {
            LineBox[{{-78., 0.5859960235734853}, {-78., 0.52287494416845}}], 
            LineBox[{
             Offset[{1.5, 0}, {-78., 0.5859960235734853}], 
              Offset[{-1.5, 0}, {-78., 0.5859960235734853}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-78., 0.52287494416845}], 
              Offset[{-1.5, 0}, {-78., 0.52287494416845}]}]}, {
            LineBox[{{-73., 0.3050865294243453}, {-73., 
             0.24491347057565477`}}], 
            LineBox[{
             Offset[{1.5, 0}, {-73., 0.3050865294243453}], 
              Offset[{-1.5, 0}, {-73., 0.3050865294243453}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-73., 0.24491347057565477`}], 
              Offset[{-1.5, 0}, {-73., 0.24491347057565477`}]}]}, {
            LineBox[{{-68., 0.26720978387725547`}, {-68., 
             0.2112384919848135}}], 
            LineBox[{
             Offset[{1.5, 0}, {-68., 0.26720978387725547`}], 
              Offset[{-1.5, 0}, {-68., 0.26720978387725547`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-68., 0.2112384919848135}], 
              Offset[{-1.5, 0}, {-68., 0.2112384919848135}]}]}, {
            LineBox[{{-63., 0.14577990683136155`}, {-63., 
             0.10422009316863846`}}], 
            LineBox[{
             Offset[{1.5, 0}, {-63., 0.14577990683136155`}], 
              Offset[{-1.5, 0}, {-63., 0.14577990683136155`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-63., 0.10422009316863846`}], 
              Offset[{-1.5, 0}, {-63., 0.10422009316863846`}]}]}, {
            LineBox[{{-58., 0.11162857777341183`}, {-58., 
             0.07371624981279506}}], 
            LineBox[{
             Offset[{1.5, 0}, {-58., 0.11162857777341183`}], 
              Offset[{-1.5, 0}, {-58., 0.11162857777341183`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-58., 0.07371624981279506}], 
              Offset[{-1.5, 0}, {-58., 0.07371624981279506}]}]}, {
            LineBox[{{-53., 0.11819574264833119`}, {-53., 
             0.07815128931513914}}], 
            LineBox[{
             Offset[{1.5, 0}, {-53., 0.11819574264833119`}], 
              Offset[{-1.5, 0}, {-53., 0.11819574264833119`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-53., 0.07815128931513914}], 
              Offset[{-1.5, 0}, {-53., 0.07815128931513914}]}]}}}, {}}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.08},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"survival rate\"", TraditionalForm], None}, {
         FormBox["knobStr", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotLabel->FormBox[
       "\"f0, \[Sigma] = -79.7857, 5.7318\"", TraditionalForm],
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {193.5, -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
     GraphicsBox[{{{}, {}, 
        {RGBColor[0, 0, 1], Thickness[0.01], Opacity[1.], 
         LineBox[CompressedData["
1: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
//P/wLl9s/4fknB+9A==
          "]]}}, {{}, {{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.019444444444444445`], AbsoluteThickness[1.6], 
          PointBox[{{-103., 0.05847953216374269}, {-98., 
           0.011976047904191617`}, {-93., 0.06741573033707865}, {-88., 
           0.22282608695652173`}, {-83., 0.42134831460674155`}, {-78., 
           0.4228571428571429}, {-73., 0.23391812865497075`}, {-68., 
           0.15757575757575756`}, {-63., 0.046632124352331605`}, {-58., 
           0.04}, {-53., 
           0.023391812865497075`}}], {{
            LineBox[{{-103., 0.079121460638031}, {-103., 
             0.04297156261778295}}], 
            LineBox[{
             Offset[{1.5, 0}, {-103., 0.079121460638031}], 
              Offset[{-1.5, 0}, {-103., 0.079121460638031}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-103., 0.04297156261778295}], 
              Offset[{-1.5, 0}, {-103., 0.04297156261778295}]}]}, {
            LineBox[{{-98., 0.02376187265447969}, {-98., 
             0.006000032107425075}}], 
            LineBox[{
             Offset[{1.5, 0}, {-98., 0.02376187265447969}], 
              Offset[{-1.5, 0}, {-98., 0.02376187265447969}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-98., 0.006000032107425075}], 
              Offset[{-1.5, 0}, {-98., 0.006000032107425075}]}]}, {
            LineBox[{{-93., 0.08872880665275452}, {-93., 
             0.05093599781651922}}], 
            LineBox[{
             Offset[{1.5, 0}, {-93., 0.08872880665275452}], 
              Offset[{-1.5, 0}, {-93., 0.08872880665275452}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-93., 0.05093599781651922}], 
              Offset[{-1.5, 0}, {-93., 0.05093599781651922}]}]}, {
            LineBox[{{-88., 0.25495639498009015`}, {-88., 
             0.19369225366855855`}}], 
            LineBox[{
             Offset[{1.5, 0}, {-88., 0.25495639498009015`}], 
              Offset[{-1.5, 0}, {-88., 0.25495639498009015`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-88., 0.19369225366855855`}], 
              Offset[{-1.5, 0}, {-88., 0.19369225366855855`}]}]}, {
            LineBox[{{-83., 0.45869681357566183`}, {-83., 
             0.3848786054187515}}], 
            LineBox[{
             Offset[{1.5, 0}, {-83., 0.45869681357566183`}], 
              Offset[{-1.5, 0}, {-83., 0.45869681357566183`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-83., 0.3848786054187515}], 
              Offset[{-1.5, 0}, {-83., 0.3848786054187515}]}]}, {
            LineBox[{{-78., 0.460535675364284}, {-78., 
             0.38605523372662504`}}], 
            LineBox[{
             Offset[{1.5, 0}, {-78., 0.460535675364284}], 
              Offset[{-1.5, 0}, {-78., 0.460535675364284}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-78., 0.38605523372662504`}], 
              Offset[{-1.5, 0}, {-78., 0.38605523372662504`}]}]}, {
            LineBox[{{-73., 0.2677800691776007}, {-73., 0.2031501633805388}}],
             LineBox[{
             Offset[{1.5, 0}, {-73., 0.2677800691776007}], 
              Offset[{-1.5, 0}, {-73., 0.2677800691776007}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-73., 0.2031501633805388}], 
              Offset[{-1.5, 0}, {-73., 0.2031501633805388}]}]}, {
            LineBox[{{-68., 0.1879921721387622}, {-68., 
             0.13128493629497276`}}], 
            LineBox[{
             Offset[{1.5, 0}, {-68., 0.1879921721387622}], 
              Offset[{-1.5, 0}, {-68., 0.1879921721387622}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-68., 0.13128493629497276`}], 
              Offset[{-1.5, 0}, {-68., 0.13128493629497276`}]}]}, {
            LineBox[{{-63., 0.06428651495373543}, {-63., 
             0.03365162937616148}}], 
            LineBox[{
             Offset[{1.5, 0}, {-63., 0.06428651495373543}], 
              Offset[{-1.5, 0}, {-63., 0.06428651495373543}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-63., 0.03365162937616148}], 
              Offset[{-1.5, 0}, {-63., 0.03365162937616148}]}]}, {
            LineBox[{{-58., 0.05761406679823192}, {-58., 
             0.02761320592904081}}], 
            LineBox[{
             Offset[{1.5, 0}, {-58., 0.05761406679823192}], 
              Offset[{-1.5, 0}, {-58., 0.05761406679823192}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-58., 0.02761320592904081}], 
              Offset[{-1.5, 0}, {-58., 0.02761320592904081}]}]}, {
            LineBox[{{-53., 0.03801589025245347}, {-53., 
             0.014309691142895365`}}], 
            LineBox[{
             Offset[{1.5, 0}, {-53., 0.03801589025245347}], 
              Offset[{-1.5, 0}, {-53., 0.03801589025245347}]}], 
            LineBox[{
             Offset[{1.5, 0}, {-53., 0.014309691142895365`}], 
              Offset[{-1.5, 0}, {-53., 0.014309691142895365`}]}]}}}, {}}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.02},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"survival rate\"", TraditionalForm], None}, {
         FormBox["knobStr", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotLabel->FormBox[
       "\"f0, \[Sigma] = -80.0171, 6.41121\"", TraditionalForm],
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {580.5, -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
     GraphicsBox[{{{}, {}, 
        {RGBColor[0, 0, 1], Thickness[0.01], Opacity[1.], 
         LineBox[CompressedData["
1:eJxF2nk01NHbAHAJiVKWkMqukEqk7PcZy2AwBjOYIQmlIqRCSZGSkCiyJEq2
zFiyZM1OtiyT7CURpUJCpdL7nd/7e73/zJzP+c6533uf+9zn3nvOSDl7WR1j
Z2NjW4t9sL5jrjZ+/VdDrVWIs1ftkqKjU6nmK2qa/2+9qj4+j2K7VS+XaVBt
7tiumsdWve9CiM2qGY/Kr369QFk1JT/CbpRKXrWt4y8nHnPrVR/pLr1TpGD1
/+3P/PzO4LVc9Uze6xujbKRV97hwhUvWmK/al5FwciHNdNVAVM4+EWOyalHf
kxqDVkarfvRucF+VpuGqD/V89r+/qLfqebG1UtsqYdWVxMcOYkSdVeeeDdn+
o1191WzizMyyewdW7dXr0uezTnnVFhfZwobFdq2aM1dpTi14x6qLd7e27W3l
WvXB/IyZLv4l9H8mpke6XhIVhv+zct/+7ZY8sqDyX/cKlDef15YH7//azwLO
JHkqwfb4//YP9LRcApXBPP1/bWA3oXOhQQU2r3X4j11EgsdmVg6A2THH//hq
347rrpqHoK3f4z+eswppcLPQgO0zRf87X10f17i7akEqnUuN5ei2Nj/P69rQ
HrLvEMu1TYyvZzJ1wPb6ihbLdg0Psr8f1AW/YgT/aa82yuX8C11I6byGZzms
+or4D1sEZVxlFixLVXkP+n9E0Lhe4TDLZgpSJYtbAJ50Oh9j+cbCzb95hwCo
00peLNfXzBueoAI8zem+yPLfcPsoqQAATd30MJaT5m6rrEQAXP52OZpldZvG
vqFkANE3GxJZ7qv8ebE0F2v/1OE0ls9K7ZGIrQZYMglmsLz5xtEG7y6A3PDw
UpbzvsS5mb8DkC6LbGD5U+lKPhc7DhrkmG9ZLpsWZT/Pg4PbOs6TLIfuUCWP
C+BAc8VghmXZELefNTI4oGlt/sfy95Jgwl4lHPya/beumzWej/eTkw/gwKeW
xM/yEWI3XDDEQX+DnBzLe4On70yZ46DWpXAfy3+KOD5QbHAQ9adAk+WkrRo3
VdxwYPZK2Irl1xOPej6H4WBPicANltNFqmRoMTgIi6mMY9mH0He+JRGHDZgt
g+XNBTxiGTk4MK2+2MTy6HtZD8EiHJScqepjOW8Lqg6uxIG5VclHlk0Dzjo7
duDghPQ0Xw9msbxbxR29OMBHqMmw/PFdFpfWGxyQt9qqsxyKH8kRmcGByzfd
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
74sM9J//B1yxh0Y23ca+Mwz0P17z5dw=
          "]]}}, {{}, {{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.019444444444444445`], AbsoluteThickness[1.6], 
          PointBox[{{50., 0.05286343612334802}, {55., 
           0.045454545454545456`}, {60., 0.05752212389380531}, {65., 
           0.08438818565400844}, {70., 0.13852813852813853`}, {75., 
           0.16736401673640167`}, {80., 0.27615062761506276`}, {85., 
           0.33624454148471616`}, {90., 0.1762114537444934}, {95., 
           0.18502202643171806`}, {100., 0.11013215859030837`}, {105., 
           0.06521739130434782}, {110., 
           0.045081967213114756`}}], {{
            LineBox[{{50., 0.06977268574510911}, {50., 0.03987643706190842}}],
             LineBox[{
             Offset[{1.5, 0}, {50., 0.06977268574510911}], 
              Offset[{-1.5, 0}, {50., 0.06977268574510911}]}], 
            LineBox[{
             Offset[{1.5, 0}, {50., 0.03987643706190842}], 
              Offset[{-1.5, 0}, {50., 0.03987643706190842}]}]}, {
            LineBox[{{55., 0.06081777474136214}, {55., 
             0.033832431019954735`}}], 
            LineBox[{
             Offset[{1.5, 0}, {55., 0.06081777474136214}], 
              Offset[{-1.5, 0}, {55., 0.06081777474136214}]}], 
            LineBox[{
             Offset[{1.5, 0}, {55., 0.033832431019954735`}], 
              Offset[{-1.5, 0}, {55., 0.033832431019954735`}]}]}, {
            LineBox[{{60., 0.07504778313302413}, {60., 0.04389494814450893}}],
             LineBox[{
             Offset[{1.5, 0}, {60., 0.07504778313302413}], 
              Offset[{-1.5, 0}, {60., 0.07504778313302413}]}], 
            LineBox[{
             Offset[{1.5, 0}, {60., 0.04389494814450893}], 
              Offset[{-1.5, 0}, {60., 0.04389494814450893}]}]}, {
            LineBox[{{65., 0.10423693857321399`}, {65., 
             0.06803196898981122}}], 
            LineBox[{
             Offset[{1.5, 0}, {65., 0.10423693857321399`}], 
              Offset[{-1.5, 0}, {65., 0.10423693857321399`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {65., 0.06803196898981122}], 
              Offset[{-1.5, 0}, {65., 0.06803196898981122}]}]}, {
            LineBox[{{70., 0.16281979241460096`}, {70., 
             0.11735262137850251`}}], 
            LineBox[{
             Offset[{1.5, 0}, {70., 0.16281979241460096`}], 
              Offset[{-1.5, 0}, {70., 0.16281979241460096`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {70., 0.11735262137850251`}], 
              Offset[{-1.5, 0}, {70., 0.11735262137850251`}]}]}, {
            LineBox[{{75., 0.19288627375134199`}, {75., 0.144613726248658}}], 
            LineBox[{
             Offset[{1.5, 0}, {75., 0.19288627375134199`}], 
              Offset[{-1.5, 0}, {75., 0.19288627375134199`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {75., 0.144613726248658}], 
              Offset[{-1.5, 0}, {75., 0.144613726248658}]}]}, {
            LineBox[{{80., 0.305958080379305}, {80., 0.24820858628736162`}}], 
            LineBox[{
             Offset[{1.5, 0}, {80., 0.305958080379305}], 
              Offset[{-1.5, 0}, {80., 0.305958080379305}]}], 
            LineBox[{
             Offset[{1.5, 0}, {80., 0.24820858628736162`}], 
              Offset[{-1.5, 0}, {80., 0.24820858628736162`}]}]}, {
            LineBox[{{85., 0.36811535330590084`}, {85., 0.3057976901723601}}],
             LineBox[{
             Offset[{1.5, 0}, {85., 0.36811535330590084`}], 
              Offset[{-1.5, 0}, {85., 0.36811535330590084`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {85., 0.3057976901723601}], 
              Offset[{-1.5, 0}, {85., 0.3057976901723601}]}]}, {
            LineBox[{{90., 0.20290385048599954`}, {90., 0.1523593074087373}}],
             LineBox[{
             Offset[{1.5, 0}, {90., 0.20290385048599954`}], 
              Offset[{-1.5, 0}, {90., 0.20290385048599954`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {90., 0.1523593074087373}], 
              Offset[{-1.5, 0}, {90., 0.1523593074087373}]}]}, {
            LineBox[{{95., 0.21215740582628306`}, {95., 0.1606496117175766}}],
             LineBox[{
             Offset[{1.5, 0}, {95., 0.21215740582628306`}], 
              Offset[{-1.5, 0}, {95., 0.21215740582628306`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {95., 0.1606496117175766}], 
              Offset[{-1.5, 0}, {95., 0.1606496117175766}]}]}, {
            LineBox[{{100., 0.13264503600439329`}, {100., 
             0.0910391745219225}}], 
            LineBox[{
             Offset[{1.5, 0}, {100., 0.13264503600439329`}], 
              Offset[{-1.5, 0}, {100., 0.13264503600439329`}]}], 
            LineBox[{
             Offset[{1.5, 0}, {100., 0.0910391745219225}], 
              Offset[{-1.5, 0}, {100., 0.0910391745219225}]}]}, {
            LineBox[{{105., 0.08345366033966886}, {105., 
             0.05074547385946534}}], 
            LineBox[{
             Offset[{1.5, 0}, {105., 0.08345366033966886}], 
              Offset[{-1.5, 0}, {105., 0.08345366033966886}]}], 
            LineBox[{
             Offset[{1.5, 0}, {105., 0.05074547385946534}], 
              Offset[{-1.5, 0}, {105., 0.05074547385946534}]}]}, {
            LineBox[{{110., 0.06032385386422213}, {110., 
             0.03355369715618602}}], 
            LineBox[{
             Offset[{1.5, 0}, {110., 0.06032385386422213}], 
              Offset[{-1.5, 0}, {110., 0.06032385386422213}]}], 
            LineBox[{
             Offset[{1.5, 0}, {110., 0.03355369715618602}], 
              Offset[{-1.5, 0}, {110., 0.03355369715618602}]}]}}}, {}}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.04},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"survival rate\"", TraditionalForm], None}, {
         FormBox["knobStr", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotLabel->FormBox[
       "\"f0, \[Sigma] = 83.7493, 8.70882\"", TraditionalForm],
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {967.5, -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImageSize->{570.7692307692321, Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.671259643411951*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["fit carrier", "Chapter",
 CellChangeTimes->{{3.671259732672226*^9, 3.671259733602227*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tPulse", "=", 
   RowBox[{"35", " ", 
    StyleBox[
     SuperscriptBox["10", 
      RowBox[{"-", "3"}]],
     Background->RGBColor[1, 1, 0]]}]}], 
  StyleBox[";",
   Background->RGBColor[1, 1, 0]], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"if", " ", 
       RowBox[{"kHz", "--"}]}], ">", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"then", " ", 
       RowBox[{"us", "--"}]}], ">", 
      RowBox[{
       RowBox[{"1", "e"}], "-", "3"}]}]}], "*)"}],
   Background->RGBColor[1, 1, 0]], "\[IndentingNewLine]", 
  RowBox[{"RabiLine", "=", 
   RowBox[{"offs", "+", 
    RowBox[{
     FractionBox[
      RowBox[{"A", " ", 
       SuperscriptBox[
        RowBox[{"(", "fR", ")"}], "2"]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"f", "-", "f0"}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", "fR", ")"}], "2"]}]], 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       RowBox[{"2", "\[Pi]", " ", 
        FractionBox[
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"f", "-", "f0"}], ")"}], "2"], "+", 
           SuperscriptBox["fR", "2"]}]], "2"], "tPulse"}], "]"}], "2"]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{"offs0", ",", "A0", ",", "f00", ",", "fR0"}], "}"}],
     Background->RGBColor[1, 1, 0]], 
    StyleBox["=",
     Background->RGBColor[1, 1, 0]], 
    RowBox[{
     StyleBox["{",
      Background->RGBColor[1, 1, 0]], 
     RowBox[{
      StyleBox["0",
       Background->RGBColor[1, 1, 0]], 
      StyleBox[",",
       Background->RGBColor[1, 1, 0]], 
      StyleBox[".8",
       Background->RGBColor[1, 1, 0]], 
      StyleBox[",",
       Background->RGBColor[1, 1, 0]], "0", 
      StyleBox[",",
       Background->RGBColor[1, 1, 0]], "20"}], 
     StyleBox["}",
      Background->RGBColor[1, 1, 0]]}]}], 
   StyleBox[";",
    Background->RGBColor[1, 1, 0]]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nlm", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"carrier", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", "RabiLine", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"offs", ",", "offs0"}], "}"}], ",", 
       RowBox[{"{", " ", 
        RowBox[{"A", ",", "A0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"f0", ",", "f00"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"fR", ",", "fR0"}], "}"}]}], "}"}], ",", "f"}], 
    RowBox[{"(*", 
     RowBox[{",", 
      RowBox[{"Weights", "\[Rule]", "weights"}]}], "*)"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitcarrier", "=", 
   RowBox[{"nlm", "[", "\"\<BestFitParameters\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.671259735012229*^9, 3.6712598190723495`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["plot with fits", "Chapter",
 CellChangeTimes->{{3.6712484028091245`*^9, 3.6712484051291275`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"remove", " ", "bkgrd"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"offsCarrier", "=", 
     RowBox[{"offs", "/.", "fitBSB1"}]}], ";", 
    RowBox[{"offs", "/.", "fitcarrier"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"carrierSub", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Thread", "[", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"carrier", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"carrier", "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "2"}], "]"}], "]"}], "-", "offsCarrier"}]}], 
          "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"carrier", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"plot", " ", "carrier"}], "+", "fit"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RabiLine", "-", "offsCarrier"}], "/.", "fitcarrier"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", 
          RowBox[{"carrier", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"carrier", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1", ",", "1"}], "]"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "LightPurple"}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<detRaman[kHz]\>\"", ",", "\"\<\>\""}], "}"}]}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ErrorListPlot", "[", 
       RowBox[{"carrierSub", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "LightPurple"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"gauss", "/.", "fitRSB1"}], ",", 
          RowBox[{"gauss", "/.", "fitRSB2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", 
          RowBox[{"RSB1", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"RSB1", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1", ",", "1"}], "]"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<detRaman[kHz]\>\"", ",", "\"\<\>\""}], "}"}]}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"gauss", "/.", "fitBSB1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", 
          RowBox[{"BSB1", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"BSB1", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1", ",", "1"}], "]"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ErrorListPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"RSB1", ",", "RSB2", ",", "BSB1", ",", "BSB2"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Blue", ",", "Red", ",", "Blue"}], "}"}]}]}], 
       "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6712600653467174`*^9, 3.6712600771147346`*^9}, {
  3.6712601094427805`*^9, 3.6712601228608*^9}, {3.6712601580708523`*^9, 
  3.6712602545749917`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.94, 0.88, 0.94], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
V1ftUejs1LRiVB78D/dB/BA=
      "]]}}, {{}, {{}, 
     {RGBColor[0.94, 0.88, 0.94], PointSize[0.019444444444444445`], 
      AbsoluteThickness[1.6], 
      PointBox[{{-72., 0.08679262615746525}, {-48., 
       0.10325767992090612`}, {-32., 0.030341013254239442`}, {-24., 
       0.21367434658757278`}, {-16., 0.5638301098274481}, {-8., 
       0.8320651511852739}, {0., 0.6873922953055215}, {8., 
       0.3170076799209061}, {16., 0.062392295305521504`}, {32., 
       0.10006890441070204`}, {56., 
       0.013674346587572779`}}], {{
        LineBox[{{-72., 0.1265953579975278}, {-72., 0.05465404439747594}}], 
        LineBox[{
         Offset[{1.5, 0}, {-72., 0.1265953579975278}], 
          Offset[{-1.5, 0}, {-72., 0.1265953579975278}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-72., 0.05465404439747594}], 
          Offset[{-1.5, 0}, {-72., 0.05465404439747594}]}]}, {
        LineBox[{{-48., 0.14383785482606057`}, {-48., 0.0697651338817311}}], 
        LineBox[{
         Offset[{1.5, 0}, {-48., 0.14383785482606057`}], 
          Offset[{-1.5, 0}, {-48., 0.14383785482606057`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-48., 0.0697651338817311}], 
          Offset[{-1.5, 0}, {-48., 0.0697651338817311}]}]}, {
        LineBox[{{-32., 0.06302608480382416}, {-32., 0.006247006996750959}}], 
        LineBox[{
         Offset[{1.5, 0}, {-32., 0.06302608480382416}], 
          Offset[{-1.5, 0}, {-32., 0.06302608480382416}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-32., 0.006247006996750959}], 
          Offset[{-1.5, 0}, {-32., 0.006247006996750959}]}]}, {
        LineBox[{{-24., 0.26266620777646127`}, {-24., 0.16981069052688938`}}],
         LineBox[{
         Offset[{1.5, 0}, {-24., 0.26266620777646127`}], 
          Offset[{-1.5, 0}, {-24., 0.26266620777646127`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-24., 0.16981069052688938`}], 
          Offset[{-1.5, 0}, {-24., 0.16981069052688938`}]}]}, {
        LineBox[{{-16., 0.6095417888831559}, {-16., 0.5159550524401376}}], 
        LineBox[{
         Offset[{1.5, 0}, {-16., 0.6095417888831559}], 
          Offset[{-1.5, 0}, {-16., 0.6095417888831559}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-16., 0.5159550524401376}], 
          Offset[{-1.5, 0}, {-16., 0.5159550524401376}]}]}, {
        LineBox[{{-8., 0.861970360398052}, {-8., 0.7934086358073965}}], 
        LineBox[{
         Offset[{1.5, 0}, {-8., 0.861970360398052}], 
          Offset[{-1.5, 0}, {-8., 0.861970360398052}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-8., 0.7934086358073965}], 
          Offset[{-1.5, 0}, {-8., 0.7934086358073965}]}]}, {
        LineBox[{{0., 0.7279498846549655}, {0., 0.6422559513773229}}], 
        LineBox[{
         Offset[{1.5, 0}, {0., 0.7279498846549655}], 
          Offset[{-1.5, 0}, {0., 0.7279498846549655}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0., 0.6422559513773229}], 
          Offset[{-1.5, 0}, {0., 0.6422559513773229}]}]}, {
        LineBox[{{8., 0.3663528723942194}, {8., 0.27023674487333543`}}], 
        LineBox[{
         Offset[{1.5, 0}, {8., 0.3663528723942194}], 
          Offset[{-1.5, 0}, {8., 0.3663528723942194}]}], 
        LineBox[{
         Offset[{1.5, 0}, {8., 0.27023674487333543`}], 
          Offset[{-1.5, 0}, {8., 0.27023674487333543`}]}]}, {
        LineBox[{{16., 0.09744833026679012}, {16., 0.03466226767026021}}], 
        LineBox[{
         Offset[{1.5, 0}, {16., 0.09744833026679012}], 
          Offset[{-1.5, 0}, {16., 0.09744833026679012}]}], 
        LineBox[{
         Offset[{1.5, 0}, {16., 0.03466226767026021}], 
          Offset[{-1.5, 0}, {16., 0.03466226767026021}]}]}, {
        LineBox[{{32., 0.13992866891757028`}, {32., 0.06721800405555514}}], 
        LineBox[{
         Offset[{1.5, 0}, {32., 0.13992866891757028`}], 
          Offset[{-1.5, 0}, {32., 0.13992866891757028`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {32., 0.06721800405555514}], 
          Offset[{-1.5, 0}, {32., 0.06721800405555514}]}]}, {
        LineBox[{{56., 0.04501512304716506}, {56., -0.008142620348209992}}], 
        LineBox[{
         Offset[{1.5, 0}, {56., 0.04501512304716506}], 
          Offset[{-1.5, 0}, {56., 0.04501512304716506}]}], 
        LineBox[{
         Offset[{1.5, 0}, {56., -0.008142620348209992}], 
          Offset[{-1.5, 0}, {
           56., -0.008142620348209992}]}]}}}, {}}, {}}, {{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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

      "]]}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], PointBox[{{-103., 0.042735042735042736`}, {-98., 
       0.06986899563318777}, {-93., 0.13513513513513514`}, {-88., 
       0.23684210526315788`}, {-83., 0.5113122171945701}, {-78., 
       0.5546558704453441}, {-73., 0.273972602739726}, {-68., 
       0.23809523809523808`}, {-63., 0.12350597609561753`}, {-58., 
       0.09090909090909091}, {-53., 
       0.0963302752293578}}], {{
        LineBox[{{-103., 0.05801749213187276}, {-103., 0.03134420999578681}}],
         LineBox[{
         Offset[{1.5, 0}, {-103., 0.05801749213187276}], 
          Offset[{-1.5, 0}, {-103., 0.05801749213187276}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-103., 0.03134420999578681}], 
          Offset[{-1.5, 0}, {-103., 0.03134420999578681}]}]}, {
        LineBox[{{-98., 0.08865217171670323}, {-98., 0.054826089152862}}], 
        LineBox[{
         Offset[{1.5, 0}, {-98., 0.08865217171670323}], 
          Offset[{-1.5, 0}, {-98., 0.08865217171670323}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-98., 0.054826089152862}], 
          Offset[{-1.5, 0}, {-98., 0.054826089152862}]}]}, {
        LineBox[{{-93., 0.15972285887447635`}, {-93., 0.11381974202238464`}}],
         LineBox[{
         Offset[{1.5, 0}, {-93., 0.15972285887447635`}], 
          Offset[{-1.5, 0}, {-93., 0.15972285887447635`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-93., 0.11381974202238464`}], 
          Offset[{-1.5, 0}, {-93., 0.11381974202238464`}]}]}, {
        LineBox[{{-88., 0.266109104289961}, {-88., 0.20987342846113072`}}], 
        LineBox[{
         Offset[{1.5, 0}, {-88., 0.266109104289961}], 
          Offset[{-1.5, 0}, {-88., 0.266109104289961}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-88., 0.20987342846113072`}], 
          Offset[{-1.5, 0}, {-88., 0.20987342846113072`}]}]}, {
        LineBox[{{-83., 0.5448105130867241}, {-83., 0.4777120094357984}}], 
        LineBox[{
         Offset[{1.5, 0}, {-83., 0.5448105130867241}], 
          Offset[{-1.5, 0}, {-83., 0.5448105130867241}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-83., 0.4777120094357984}], 
          Offset[{-1.5, 0}, {-83., 0.4777120094357984}]}]}, {
        LineBox[{{-78., 0.5859960235734853}, {-78., 0.52287494416845}}], 
        LineBox[{
         Offset[{1.5, 0}, {-78., 0.5859960235734853}], 
          Offset[{-1.5, 0}, {-78., 0.5859960235734853}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-78., 0.52287494416845}], 
          Offset[{-1.5, 0}, {-78., 0.52287494416845}]}]}, {
        LineBox[{{-73., 0.3050865294243453}, {-73., 0.24491347057565477`}}], 
        LineBox[{
         Offset[{1.5, 0}, {-73., 0.3050865294243453}], 
          Offset[{-1.5, 0}, {-73., 0.3050865294243453}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-73., 0.24491347057565477`}], 
          Offset[{-1.5, 0}, {-73., 0.24491347057565477`}]}]}, {
        LineBox[{{-68., 0.26720978387725547`}, {-68., 0.2112384919848135}}], 
        LineBox[{
         Offset[{1.5, 0}, {-68., 0.26720978387725547`}], 
          Offset[{-1.5, 0}, {-68., 0.26720978387725547`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-68., 0.2112384919848135}], 
          Offset[{-1.5, 0}, {-68., 0.2112384919848135}]}]}, {
        LineBox[{{-63., 0.14577990683136155`}, {-63., 0.10422009316863846`}}],
         LineBox[{
         Offset[{1.5, 0}, {-63., 0.14577990683136155`}], 
          Offset[{-1.5, 0}, {-63., 0.14577990683136155`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-63., 0.10422009316863846`}], 
          Offset[{-1.5, 0}, {-63., 0.10422009316863846`}]}]}, {
        LineBox[{{-58., 0.11162857777341183`}, {-58., 0.07371624981279506}}], 
        LineBox[{
         Offset[{1.5, 0}, {-58., 0.11162857777341183`}], 
          Offset[{-1.5, 0}, {-58., 0.11162857777341183`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-58., 0.07371624981279506}], 
          Offset[{-1.5, 0}, {-58., 0.07371624981279506}]}]}, {
        LineBox[{{-53., 0.11819574264833119`}, {-53., 0.07815128931513914}}], 
        LineBox[{
         Offset[{1.5, 0}, {-53., 0.11819574264833119`}], 
          Offset[{-1.5, 0}, {-53., 0.11819574264833119`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-53., 0.07815128931513914}], 
          Offset[{-1.5, 0}, {-53., 0.07815128931513914}]}]}}}, 
     {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], PointBox[{{-103., 0.05847953216374269}, {-98., 
       0.011976047904191617`}, {-93., 0.06741573033707865}, {-88., 
       0.22282608695652173`}, {-83., 0.42134831460674155`}, {-78., 
       0.4228571428571429}, {-73., 0.23391812865497075`}, {-68., 
       0.15757575757575756`}, {-63., 0.046632124352331605`}, {-58., 
       0.04}, {-53., 
       0.023391812865497075`}}], {{
        LineBox[{{-103., 0.079121460638031}, {-103., 0.04297156261778295}}], 
        LineBox[{
         Offset[{1.5, 0}, {-103., 0.079121460638031}], 
          Offset[{-1.5, 0}, {-103., 0.079121460638031}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-103., 0.04297156261778295}], 
          Offset[{-1.5, 0}, {-103., 0.04297156261778295}]}]}, {
        LineBox[{{-98., 0.02376187265447969}, {-98., 0.006000032107425075}}], 
        LineBox[{
         Offset[{1.5, 0}, {-98., 0.02376187265447969}], 
          Offset[{-1.5, 0}, {-98., 0.02376187265447969}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-98., 0.006000032107425075}], 
          Offset[{-1.5, 0}, {-98., 0.006000032107425075}]}]}, {
        LineBox[{{-93., 0.08872880665275452}, {-93., 0.05093599781651922}}], 
        LineBox[{
         Offset[{1.5, 0}, {-93., 0.08872880665275452}], 
          Offset[{-1.5, 0}, {-93., 0.08872880665275452}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-93., 0.05093599781651922}], 
          Offset[{-1.5, 0}, {-93., 0.05093599781651922}]}]}, {
        LineBox[{{-88., 0.25495639498009015`}, {-88., 0.19369225366855855`}}],
         LineBox[{
         Offset[{1.5, 0}, {-88., 0.25495639498009015`}], 
          Offset[{-1.5, 0}, {-88., 0.25495639498009015`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-88., 0.19369225366855855`}], 
          Offset[{-1.5, 0}, {-88., 0.19369225366855855`}]}]}, {
        LineBox[{{-83., 0.45869681357566183`}, {-83., 0.3848786054187515}}], 
        LineBox[{
         Offset[{1.5, 0}, {-83., 0.45869681357566183`}], 
          Offset[{-1.5, 0}, {-83., 0.45869681357566183`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-83., 0.3848786054187515}], 
          Offset[{-1.5, 0}, {-83., 0.3848786054187515}]}]}, {
        LineBox[{{-78., 0.460535675364284}, {-78., 0.38605523372662504`}}], 
        LineBox[{
         Offset[{1.5, 0}, {-78., 0.460535675364284}], 
          Offset[{-1.5, 0}, {-78., 0.460535675364284}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-78., 0.38605523372662504`}], 
          Offset[{-1.5, 0}, {-78., 0.38605523372662504`}]}]}, {
        LineBox[{{-73., 0.2677800691776007}, {-73., 0.2031501633805388}}], 
        LineBox[{
         Offset[{1.5, 0}, {-73., 0.2677800691776007}], 
          Offset[{-1.5, 0}, {-73., 0.2677800691776007}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-73., 0.2031501633805388}], 
          Offset[{-1.5, 0}, {-73., 0.2031501633805388}]}]}, {
        LineBox[{{-68., 0.1879921721387622}, {-68., 0.13128493629497276`}}], 
        LineBox[{
         Offset[{1.5, 0}, {-68., 0.1879921721387622}], 
          Offset[{-1.5, 0}, {-68., 0.1879921721387622}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-68., 0.13128493629497276`}], 
          Offset[{-1.5, 0}, {-68., 0.13128493629497276`}]}]}, {
        LineBox[{{-63., 0.06428651495373543}, {-63., 0.03365162937616148}}], 
        LineBox[{
         Offset[{1.5, 0}, {-63., 0.06428651495373543}], 
          Offset[{-1.5, 0}, {-63., 0.06428651495373543}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-63., 0.03365162937616148}], 
          Offset[{-1.5, 0}, {-63., 0.03365162937616148}]}]}, {
        LineBox[{{-58., 0.05761406679823192}, {-58., 0.02761320592904081}}], 
        LineBox[{
         Offset[{1.5, 0}, {-58., 0.05761406679823192}], 
          Offset[{-1.5, 0}, {-58., 0.05761406679823192}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-58., 0.02761320592904081}], 
          Offset[{-1.5, 0}, {-58., 0.02761320592904081}]}]}, {
        LineBox[{{-53., 0.03801589025245347}, {-53., 0.014309691142895365`}}],
         LineBox[{
         Offset[{1.5, 0}, {-53., 0.03801589025245347}], 
          Offset[{-1.5, 0}, {-53., 0.03801589025245347}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-53., 0.014309691142895365`}], 
          Offset[{-1.5, 0}, {-53., 0.014309691142895365`}]}]}}}, 
     {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], PointBox[{{50., 0.05286343612334802}, {55., 
       0.045454545454545456`}, {60., 0.05752212389380531}, {65., 
       0.08438818565400844}, {70., 0.13852813852813853`}, {75., 
       0.16736401673640167`}, {80., 0.27615062761506276`}, {85., 
       0.33624454148471616`}, {90., 0.1762114537444934}, {95., 
       0.18502202643171806`}, {100., 0.11013215859030837`}, {105., 
       0.06521739130434782}, {110., 
       0.045081967213114756`}}], {{
        LineBox[{{50., 0.06977268574510911}, {50., 0.03987643706190842}}], 
        LineBox[{
         Offset[{1.5, 0}, {50., 0.06977268574510911}], 
          Offset[{-1.5, 0}, {50., 0.06977268574510911}]}], 
        LineBox[{
         Offset[{1.5, 0}, {50., 0.03987643706190842}], 
          Offset[{-1.5, 0}, {50., 0.03987643706190842}]}]}, {
        LineBox[{{55., 0.06081777474136214}, {55., 0.033832431019954735`}}], 
        LineBox[{
         Offset[{1.5, 0}, {55., 0.06081777474136214}], 
          Offset[{-1.5, 0}, {55., 0.06081777474136214}]}], 
        LineBox[{
         Offset[{1.5, 0}, {55., 0.033832431019954735`}], 
          Offset[{-1.5, 0}, {55., 0.033832431019954735`}]}]}, {
        LineBox[{{60., 0.07504778313302413}, {60., 0.04389494814450893}}], 
        LineBox[{
         Offset[{1.5, 0}, {60., 0.07504778313302413}], 
          Offset[{-1.5, 0}, {60., 0.07504778313302413}]}], 
        LineBox[{
         Offset[{1.5, 0}, {60., 0.04389494814450893}], 
          Offset[{-1.5, 0}, {60., 0.04389494814450893}]}]}, {
        LineBox[{{65., 0.10423693857321399`}, {65., 0.06803196898981122}}], 
        LineBox[{
         Offset[{1.5, 0}, {65., 0.10423693857321399`}], 
          Offset[{-1.5, 0}, {65., 0.10423693857321399`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {65., 0.06803196898981122}], 
          Offset[{-1.5, 0}, {65., 0.06803196898981122}]}]}, {
        LineBox[{{70., 0.16281979241460096`}, {70., 0.11735262137850251`}}], 
        LineBox[{
         Offset[{1.5, 0}, {70., 0.16281979241460096`}], 
          Offset[{-1.5, 0}, {70., 0.16281979241460096`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {70., 0.11735262137850251`}], 
          Offset[{-1.5, 0}, {70., 0.11735262137850251`}]}]}, {
        LineBox[{{75., 0.19288627375134199`}, {75., 0.144613726248658}}], 
        LineBox[{
         Offset[{1.5, 0}, {75., 0.19288627375134199`}], 
          Offset[{-1.5, 0}, {75., 0.19288627375134199`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {75., 0.144613726248658}], 
          Offset[{-1.5, 0}, {75., 0.144613726248658}]}]}, {
        LineBox[{{80., 0.305958080379305}, {80., 0.24820858628736162`}}], 
        LineBox[{
         Offset[{1.5, 0}, {80., 0.305958080379305}], 
          Offset[{-1.5, 0}, {80., 0.305958080379305}]}], 
        LineBox[{
         Offset[{1.5, 0}, {80., 0.24820858628736162`}], 
          Offset[{-1.5, 0}, {80., 0.24820858628736162`}]}]}, {
        LineBox[{{85., 0.36811535330590084`}, {85., 0.3057976901723601}}], 
        LineBox[{
         Offset[{1.5, 0}, {85., 0.36811535330590084`}], 
          Offset[{-1.5, 0}, {85., 0.36811535330590084`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {85., 0.3057976901723601}], 
          Offset[{-1.5, 0}, {85., 0.3057976901723601}]}]}, {
        LineBox[{{90., 0.20290385048599954`}, {90., 0.1523593074087373}}], 
        LineBox[{
         Offset[{1.5, 0}, {90., 0.20290385048599954`}], 
          Offset[{-1.5, 0}, {90., 0.20290385048599954`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {90., 0.1523593074087373}], 
          Offset[{-1.5, 0}, {90., 0.1523593074087373}]}]}, {
        LineBox[{{95., 0.21215740582628306`}, {95., 0.1606496117175766}}], 
        LineBox[{
         Offset[{1.5, 0}, {95., 0.21215740582628306`}], 
          Offset[{-1.5, 0}, {95., 0.21215740582628306`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {95., 0.1606496117175766}], 
          Offset[{-1.5, 0}, {95., 0.1606496117175766}]}]}, {
        LineBox[{{100., 0.13264503600439329`}, {100., 0.0910391745219225}}], 
        LineBox[{
         Offset[{1.5, 0}, {100., 0.13264503600439329`}], 
          Offset[{-1.5, 0}, {100., 0.13264503600439329`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {100., 0.0910391745219225}], 
          Offset[{-1.5, 0}, {100., 0.0910391745219225}]}]}, {
        LineBox[{{105., 0.08345366033966886}, {105., 0.05074547385946534}}], 
        LineBox[{
         Offset[{1.5, 0}, {105., 0.08345366033966886}], 
          Offset[{-1.5, 0}, {105., 0.08345366033966886}]}], 
        LineBox[{
         Offset[{1.5, 0}, {105., 0.05074547385946534}], 
          Offset[{-1.5, 0}, {105., 0.05074547385946534}]}]}, {
        LineBox[{{110., 0.06032385386422213}, {110., 0.03355369715618602}}], 
        LineBox[{
         Offset[{1.5, 0}, {110., 0.06032385386422213}], 
          Offset[{-1.5, 0}, {110., 0.06032385386422213}]}], 
        LineBox[{
         Offset[{1.5, 0}, {110., 0.03355369715618602}], 
          Offset[{-1.5, 0}, {110., 0.03355369715618602}]}]}}}, 
     {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], PointBox[{{50., 0.060240963855421686`}, {55., 
       0.021621621621621623`}, {60., 0.011695906432748537`}, {65., 
       0.016666666666666666`}, {70., 0.010869565217391304`}, {75., 
       0.016666666666666666`}, {80., 0.022988505747126436`}, {85., 
       0.01910828025477707}, {90., 0.017142857142857144`}, {95., 
       0.028409090909090908`}, {100., 0.031088082901554404`}, {105., 
       0.023809523809523808`}, {110., 
       0.}}], {{
        LineBox[{{50., 0.08147339547388649}, {50., 0.04427510752012547}}], 
        LineBox[{
         Offset[{1.5, 0}, {50., 0.08147339547388649}], 
          Offset[{-1.5, 0}, {50., 0.08147339547388649}]}], 
        LineBox[{
         Offset[{1.5, 0}, {50., 0.04427510752012547}], 
          Offset[{-1.5, 0}, {50., 0.04427510752012547}]}]}, {
        LineBox[{{55., 0.035163811529628615`}, {55., 0.01322328524456494}}], 
        LineBox[{
         Offset[{1.5, 0}, {55., 0.035163811529628615`}], 
          Offset[{-1.5, 0}, {55., 0.035163811529628615`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {55., 0.01322328524456494}], 
          Offset[{-1.5, 0}, {55., 0.01322328524456494}]}]}, {
        LineBox[{{60., 0.023210362541851805`}, {60., 0.005859404900008659}}], 
        LineBox[{
         Offset[{1.5, 0}, {60., 0.023210362541851805`}], 
          Offset[{-1.5, 0}, {60., 0.023210362541851805`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {60., 0.005859404900008659}], 
          Offset[{-1.5, 0}, {60., 0.005859404900008659}]}]}, {
        LineBox[{{65., 0.029220189955800176`}, {65., 0.009453843193371095}}], 
        LineBox[{
         Offset[{1.5, 0}, {65., 0.029220189955800176`}], 
          Offset[{-1.5, 0}, {65., 0.029220189955800176`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {65., 0.009453843193371095}], 
          Offset[{-1.5, 0}, {65., 0.009453843193371095}]}]}, {
        LineBox[{{70., 0.021582356944819223`}, {70., 0.005444670082207805}}], 
        LineBox[{
         Offset[{1.5, 0}, {70., 0.021582356944819223`}], 
          Offset[{-1.5, 0}, {70., 0.021582356944819223`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {70., 0.005444670082207805}], 
          Offset[{-1.5, 0}, {70., 0.005444670082207805}]}]}, {
        LineBox[{{75., 0.029220189955800176`}, {75., 0.009453843193371095}}], 
        LineBox[{
         Offset[{1.5, 0}, {75., 0.029220189955800176`}], 
          Offset[{-1.5, 0}, {75., 0.029220189955800176`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {75., 0.009453843193371095}], 
          Offset[{-1.5, 0}, {75., 0.009453843193371095}]}]}, {
        LineBox[{{80., 0.03736644988501382}, {80., 0.014062121543557607`}}], 
        LineBox[{
         Offset[{1.5, 0}, {80., 0.03736644988501382}], 
          Offset[{-1.5, 0}, {80., 0.03736644988501382}]}], 
        LineBox[{
         Offset[{1.5, 0}, {80., 0.014062121543557607`}], 
          Offset[{-1.5, 0}, {80., 0.014062121543557607`}]}]}, {
        LineBox[{{85., 0.033460796543147285`}, {85., 0.01084300092520714}}], 
        LineBox[{
         Offset[{1.5, 0}, {85., 0.033460796543147285`}], 
          Offset[{-1.5, 0}, {85., 0.033460796543147285`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {85., 0.01084300092520714}], 
          Offset[{-1.5, 0}, {85., 0.01084300092520714}]}]}, {
        LineBox[{{90., 0.03004803999756968}, {90., 0.009724687275157589}}], 
        LineBox[{
         Offset[{1.5, 0}, {90., 0.03004803999756968}], 
          Offset[{-1.5, 0}, {90., 0.03004803999756968}]}], 
        LineBox[{
         Offset[{1.5, 0}, {90., 0.009724687275157589}], 
          Offset[{-1.5, 0}, {90., 0.009724687275157589}]}]}, {
        LineBox[{{95., 0.04384225106157448}, {95., 0.018304641593792758`}}], 
        LineBox[{
         Offset[{1.5, 0}, {95., 0.04384225106157448}], 
          Offset[{-1.5, 0}, {95., 0.04384225106157448}]}], 
        LineBox[{
         Offset[{1.5, 0}, {95., 0.018304641593792758`}], 
          Offset[{-1.5, 0}, {95., 0.018304641593792758`}]}]}, {
        LineBox[{{100., 0.04619799858160884}, {100., 0.020812310696741675`}}],
         LineBox[{
         Offset[{1.5, 0}, {100., 0.04619799858160884}], 
          Offset[{-1.5, 0}, {100., 0.04619799858160884}]}], 
        LineBox[{
         Offset[{1.5, 0}, {100., 0.020812310696741675`}], 
          Offset[{-1.5, 0}, {100., 0.020812310696741675`}]}]}, {
        LineBox[{{105., 0.03868830359302591}, {105., 0.014566134276796566`}}],
         LineBox[{
         Offset[{1.5, 0}, {105., 0.03868830359302591}], 
          Offset[{-1.5, 0}, {105., 0.03868830359302591}]}], 
        LineBox[{
         Offset[{1.5, 0}, {105., 0.014566134276796566`}], 
          Offset[{-1.5, 0}, {105., 0.014566134276796566`}]}]}, {
        LineBox[{{110., 0.006024096385542169}, {110., 0.}}], 
        LineBox[{
         Offset[{1.5, 0}, {110., 0.006024096385542169}], 
          Offset[{-1.5, 0}, {110., 0.006024096385542169}]}], 
        LineBox[{
         Offset[{1.5, 0}, {110., 0.}], 
          Offset[{-1.5, 0}, {110., 0.}]}]}}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], None}, {
     FormBox["\"detRaman[kHz]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6712601681028666`*^9, 3.671260255414993*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["calculate nbar", "Chapter",
 CellChangeTimes->{{3.671248463600211*^9, 3.671248464820213*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"nbar", ",", "nbar1", ",", "nbar2", ",", "fitsurv1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ftrap", "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"f0", "/.", "fitBSB1"}], ")"}], "-", 
       RowBox[{"(", 
        RowBox[{"f0", "/.", "fitRSB1"}], ")"}]}], "2"], "kHz"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"use", " ", "fitted", " ", "offset", " ", "from", " ", "RSB"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"offset2", "=", 
    RowBox[{"offs", "/.", "fitRSB2"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "use", " ", "measured", " ", "offset", " ", "from", " ", "BSB", " ", 
    "wings"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"offset2", "=", 
    RowBox[{"Mean", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BSB2", "[", 
        RowBox[{"[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", 
           RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BSB2mod", "=", 
    RowBox[{"Cases", "[", 
     RowBox[{"BSB2", ",", 
      RowBox[{"x_", "/;", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ">", "0"}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ARSB2", "=", 
   RowBox[{"Re", "[", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"gauss", "-", "offs"}], "/.", "fitRSB2"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ABSB2", "=", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"Differences", "[", 
       RowBox[{
        RowBox[{"BSB2mod", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}], "]"}], " ", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"BSB2mod", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "2"}], "]"}], "]"}], "-", "offset2"}], ")"}], 
       " ", 
       RowBox[{"Boole", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Positive", "[", "#", "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"BSB2mod", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}], "-", "offset2"}], 
          ")"}]}], "]"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nbar1", "=", 
   FractionBox["1", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"\[Sigma]", " ", "A"}], "/.", "fitRSB1"}], 
      RowBox[{
       RowBox[{"\[Sigma]", " ", "A"}], "/.", "fitBSB1"}]], "-", "1"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nbar2", "=", 
    FractionBox["1", 
     RowBox[{
      FractionBox["ARSB2", "ABSB2"], "-", "1"}]]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"get", " ", "temp"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T1", "=", 
   RowBox[{
    RowBox[{"T", "/", "uK"}], "/.", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"nbar1", "==", 
         FractionBox["1", 
          RowBox[{
           RowBox[{"Exp", "[", 
            FractionBox[
             RowBox[{"\[HBar]", " ", "2", "\[Pi]", " ", "f"}], 
             RowBox[{"kB", " ", "T"}]], "]"}], "-", "1"}]]}], "/.", 
        RowBox[{"f", "\[Rule]", 
         RowBox[{"(", "ftrap", ")"}]}]}], ",", "T"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T2", "=", 
    RowBox[{
     RowBox[{"T", "/", "uK"}], "/.", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nbar2", "==", 
          FractionBox["1", 
           RowBox[{
            RowBox[{"Exp", "[", 
             FractionBox[
              RowBox[{"\[HBar]", " ", "2", "\[Pi]", " ", "f"}], 
              RowBox[{"kB", " ", "T"}]], "]"}], "-", "1"}]]}], "/.", 
         RowBox[{"f", "\[Rule]", 
          RowBox[{"(", "ftrap", ")"}]}]}], ",", "T"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"get", " ", "%", "ground", " ", "state", " ", "occupation"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P01", "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox["nbar", "n"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"nbar", "+", "1"}], ")"}], 
       RowBox[{"n", "+", "1"}]]], "/.", 
     RowBox[{"n", "\[Rule]", "0"}]}], "/.", 
    RowBox[{"nbar", "\[Rule]", "nbar1"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P02", "=", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["nbar", "n"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"nbar", "+", "1"}], ")"}], 
        RowBox[{"n", "+", "1"}]]], "/.", 
      RowBox[{"n", "\[Rule]", "0"}]}], "/.", 
     RowBox[{"nbar", "\[Rule]", "nbar2"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<nbar1\>\"", ",", "\"\<nbar2\>\"", ",", "\"\<T1[uK]\>\"", ",", 
      "\"\<T2[uK]\>\"", ",", "\"\<P01\>\"", ",", "\"\<P02\>\""}], "}"}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nbar1", ",", "nbar2", ",", "T1", ",", "T2", ",", " ", "P01", ",", 
        "P02"}], "}"}], ",", ".01"}], "]"}]}], "\[IndentingNewLine]", "}"}], "//",
   "TableForm"}]}], "Input",
 CellChangeTimes->{{3.671248479973234*^9, 3.6712484824932375`*^9}, {
   3.6712489358968906`*^9, 3.671248953535916*^9}, {3.6712490604500737`*^9, 
   3.671249097553127*^9}, 3.67124929042441*^9, {3.6712505188077326`*^9, 
   3.671250519157733*^9}, {3.671250866460249*^9, 3.6712508891752825`*^9}, {
   3.6712511596836853`*^9, 3.671251201845748*^9}, {3.671256648630393*^9, 
   3.671256650050395*^9}, {3.6712568731017284`*^9, 3.671256879795738*^9}, {
   3.6712569226328*^9, 3.6712571236500893`*^9}, 3.6712572010642023`*^9, {
   3.671257259290287*^9, 3.6712572609302893`*^9}, {3.6712585982985945`*^9, 
   3.6712586164626207`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(Solve\\)\[NoBreak], so some solutions may not be found; use \
Reduce for complete solution information. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6712508895852833`*^9, {3.671251171477702*^9, 3.6712512025757484`*^9}, {
   3.671256633776371*^9, 3.6712566505803957`*^9}, 3.6712567155544977`*^9, 
   3.671256881705741*^9, {3.671256947571836*^9, 3.671257007505922*^9}, {
   3.6712570787450247`*^9, 3.67125712399009*^9}, 3.671257201874203*^9, {
   3.6712572456682673`*^9, 3.6712572612202897`*^9}, 3.671257612496804*^9, 
   3.671257652455862*^9, 3.6712586167126207`*^9, 3.671259648771959*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(Solve\\)\[NoBreak], so some solutions may not be found; use \
Reduce for complete solution information. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6712508895852833`*^9, {3.671251171477702*^9, 3.6712512025757484`*^9}, {
   3.671256633776371*^9, 3.6712566505803957`*^9}, 3.6712567155544977`*^9, 
   3.671256881705741*^9, {3.671256947571836*^9, 3.671257007505922*^9}, {
   3.6712570787450247`*^9, 3.67125712399009*^9}, 3.671257201874203*^9, {
   3.6712572456682673`*^9, 3.6712572612202897`*^9}, 3.671257612496804*^9, 
   3.671257652455862*^9, 3.6712586167126207`*^9, 3.6712596487819586`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"nbar1\"\>", "\<\"nbar2\"\>", "\<\"T1[uK]\"\>", "\<\"T2[uK]\"\>", \
"\<\"P01\"\>", "\<\"P02\"\>"},
    {"3.41`", "0.03`", "15.25`", "1.1`", "0.23`", "0.97`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6712570787750244`*^9, 3.67125712401009*^9}, 
   3.671257201894203*^9, {3.671257245688267*^9, 3.6712572612302895`*^9}, 
   3.6712576125168037`*^9, 3.671257652475862*^9, 3.6712586167326207`*^9, 
   3.6712596487819586`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["fit (using double gaussians for the pgc case)", "Title",
 CellChangeTimes->{{3.6712480837956614`*^9, 3.6712480846856623`*^9}, {
  3.6712496893310003`*^9, 3.6712497155080585`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Sigma]2", ",", " ", "fitsurv1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataaa1", "=", "survival1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataaa", "=", 
    RowBox[{"dataaa1", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gauss2", "=", 
   RowBox[{"offs", "-", 
    RowBox[{"A", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"f", "-", "f0"}], ")"}], "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}], "]"}]}], "-", 
    RowBox[{"A2", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"f", "-", "f02"}], ")"}], "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]2", "2"]}]]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "offs0", ",", "A0", ",", "f00", ",", "\[Sigma]0", ",", "A02", ",", 
       "f020", ",", "\[Sigma]20"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", ".3"}], ",", 
       RowBox[{"-", "80"}], ",", "10", ",", 
       RowBox[{"-", ".3"}], ",", "80", ",", "10"}], "}"}]}], ";"}],
   Background->RGBColor[1, 1, 0]], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nlm", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"dataaa", ",", "gauss2", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"offs", ",", "offs0"}], "}"}], ",", 
       RowBox[{"{", " ", 
        RowBox[{"A", ",", "A0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"f0", ",", "f00"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", "\[Sigma]0"}], "}"}], ",", 
       RowBox[{"{", " ", 
        RowBox[{"A2", ",", "A02"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"f02", ",", "f020"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]2", ",", "\[Sigma]20"}], "}"}]}], "}"}], ",", "f"}], 
    RowBox[{"(*", 
     RowBox[{",", 
      RowBox[{"Weights", "\[Rule]", "weights"}]}], "*)"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fit", "=", 
    RowBox[{"nlm", "[", "\"\<BestFitParameters\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gauss2", "/.", "fit"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"survival1", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"survival1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1", ",", "1"}], "]"}], "]"}]}], "}"}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", ".01", "]"}], ",", "Blue"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True"}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"knobStr", ",", "\"\<survival rate\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"\"\<f0, \[Sigma] = \>\"", " ", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"f0", "/.", "fit"}], "]"}], "<>", "\"\<, \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"\[Sigma]", "/.", "fit"}], "]"}]}]}]}], " ", 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"ErrorListPlot", "[", "dataaa1", "]"}]}], "\[IndentingNewLine]", 
   "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"gauss2", "/.", "fit"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitsurv1", "=", "fit"}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.671249822482271*^9, 3.671249945579544*^9}, {
   3.6712501289079494`*^9, 3.671250141792985*^9}, {3.6712505280477457`*^9, 
   3.6712505294397483`*^9}, 3.6712567388125305`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.01], Opacity[1.], LineBox[CompressedData["
1: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
      "]]}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQYHIg+IxT0UjXu41B7Mb4g4ULLD3vr9o40QvkP4
gUMiP9dI+xyE8BnCDvA+NZ1yPeAchH8g5EDB6hggegDVH3zgjzTz6r37H0L1
Bx3okTBMOtJxEao/8MC855VABNXf4H/gxBeDArF5+6HyvgfcxGNLLrpuh8p7
HZjUtfOq5ModUHlPB9eFsye9ElgNlfd2gKhfDpX3c1hscd2wq3gt1P4Ah66G
3otls7ZC1Qc6aL51c/DaDfXPgSAHhxoTRf2co1D9IQ5bJWesK14Dda9DqMOb
lR6X2VuvQvWHOfBvbDwv0XcMqj/cQUbXw+HsuuNQ/ZEOQbJJzPMN90D1Rzlw
R55wEtu0Aao/2kFwzeKzv0WW2wMAjZJ49w==
       "]], {{
        LineBox[{{-103., 0.05801749213187276}, {-103., 0.03134420999578681}}],
         LineBox[{
         Offset[{1.5, 0}, {-103., 0.05801749213187276}], 
          Offset[{-1.5, 0}, {-103., 0.05801749213187276}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-103., 0.03134420999578681}], 
          Offset[{-1.5, 0}, {-103., 0.03134420999578681}]}]}, {
        LineBox[{{-98., 0.08865217171670323}, {-98., 0.054826089152862}}], 
        LineBox[{
         Offset[{1.5, 0}, {-98., 0.08865217171670323}], 
          Offset[{-1.5, 0}, {-98., 0.08865217171670323}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-98., 0.054826089152862}], 
          Offset[{-1.5, 0}, {-98., 0.054826089152862}]}]}, {
        LineBox[{{-93., 0.15972285887447635`}, {-93., 0.11381974202238464`}}],
         LineBox[{
         Offset[{1.5, 0}, {-93., 0.15972285887447635`}], 
          Offset[{-1.5, 0}, {-93., 0.15972285887447635`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-93., 0.11381974202238464`}], 
          Offset[{-1.5, 0}, {-93., 0.11381974202238464`}]}]}, {
        LineBox[{{-88., 0.266109104289961}, {-88., 0.20987342846113072`}}], 
        LineBox[{
         Offset[{1.5, 0}, {-88., 0.266109104289961}], 
          Offset[{-1.5, 0}, {-88., 0.266109104289961}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-88., 0.20987342846113072`}], 
          Offset[{-1.5, 0}, {-88., 0.20987342846113072`}]}]}, {
        LineBox[{{-83., 0.5448105130867241}, {-83., 0.4777120094357984}}], 
        LineBox[{
         Offset[{1.5, 0}, {-83., 0.5448105130867241}], 
          Offset[{-1.5, 0}, {-83., 0.5448105130867241}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-83., 0.4777120094357984}], 
          Offset[{-1.5, 0}, {-83., 0.4777120094357984}]}]}, {
        LineBox[{{-78., 0.5859960235734853}, {-78., 0.52287494416845}}], 
        LineBox[{
         Offset[{1.5, 0}, {-78., 0.5859960235734853}], 
          Offset[{-1.5, 0}, {-78., 0.5859960235734853}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-78., 0.52287494416845}], 
          Offset[{-1.5, 0}, {-78., 0.52287494416845}]}]}, {
        LineBox[{{-73., 0.3050865294243453}, {-73., 0.24491347057565477`}}], 
        LineBox[{
         Offset[{1.5, 0}, {-73., 0.3050865294243453}], 
          Offset[{-1.5, 0}, {-73., 0.3050865294243453}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-73., 0.24491347057565477`}], 
          Offset[{-1.5, 0}, {-73., 0.24491347057565477`}]}]}, {
        LineBox[{{-68., 0.26720978387725547`}, {-68., 0.2112384919848135}}], 
        LineBox[{
         Offset[{1.5, 0}, {-68., 0.26720978387725547`}], 
          Offset[{-1.5, 0}, {-68., 0.26720978387725547`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-68., 0.2112384919848135}], 
          Offset[{-1.5, 0}, {-68., 0.2112384919848135}]}]}, {
        LineBox[{{-63., 0.14577990683136155`}, {-63., 0.10422009316863846`}}],
         LineBox[{
         Offset[{1.5, 0}, {-63., 0.14577990683136155`}], 
          Offset[{-1.5, 0}, {-63., 0.14577990683136155`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-63., 0.10422009316863846`}], 
          Offset[{-1.5, 0}, {-63., 0.10422009316863846`}]}]}, {
        LineBox[{{-58., 0.11162857777341183`}, {-58., 0.07371624981279506}}], 
        LineBox[{
         Offset[{1.5, 0}, {-58., 0.11162857777341183`}], 
          Offset[{-1.5, 0}, {-58., 0.11162857777341183`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-58., 0.07371624981279506}], 
          Offset[{-1.5, 0}, {-58., 0.07371624981279506}]}]}, {
        LineBox[{{-53., 0.11819574264833119`}, {-53., 0.07815128931513914}}], 
        LineBox[{
         Offset[{1.5, 0}, {-53., 0.11819574264833119`}], 
          Offset[{-1.5, 0}, {-53., 0.11819574264833119`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-53., 0.07815128931513914}], 
          Offset[{-1.5, 0}, {-53., 0.07815128931513914}]}]}, {
        LineBox[{{50., 0.06977268574510911}, {50., 0.03987643706190842}}], 
        LineBox[{
         Offset[{1.5, 0}, {50., 0.06977268574510911}], 
          Offset[{-1.5, 0}, {50., 0.06977268574510911}]}], 
        LineBox[{
         Offset[{1.5, 0}, {50., 0.03987643706190842}], 
          Offset[{-1.5, 0}, {50., 0.03987643706190842}]}]}, {
        LineBox[{{55., 0.06081777474136214}, {55., 0.033832431019954735`}}], 
        LineBox[{
         Offset[{1.5, 0}, {55., 0.06081777474136214}], 
          Offset[{-1.5, 0}, {55., 0.06081777474136214}]}], 
        LineBox[{
         Offset[{1.5, 0}, {55., 0.033832431019954735`}], 
          Offset[{-1.5, 0}, {55., 0.033832431019954735`}]}]}, {
        LineBox[{{60., 0.07504778313302413}, {60., 0.04389494814450893}}], 
        LineBox[{
         Offset[{1.5, 0}, {60., 0.07504778313302413}], 
          Offset[{-1.5, 0}, {60., 0.07504778313302413}]}], 
        LineBox[{
         Offset[{1.5, 0}, {60., 0.04389494814450893}], 
          Offset[{-1.5, 0}, {60., 0.04389494814450893}]}]}, {
        LineBox[{{65., 0.10423693857321399`}, {65., 0.06803196898981122}}], 
        LineBox[{
         Offset[{1.5, 0}, {65., 0.10423693857321399`}], 
          Offset[{-1.5, 0}, {65., 0.10423693857321399`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {65., 0.06803196898981122}], 
          Offset[{-1.5, 0}, {65., 0.06803196898981122}]}]}, {
        LineBox[{{70., 0.16281979241460096`}, {70., 0.11735262137850251`}}], 
        LineBox[{
         Offset[{1.5, 0}, {70., 0.16281979241460096`}], 
          Offset[{-1.5, 0}, {70., 0.16281979241460096`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {70., 0.11735262137850251`}], 
          Offset[{-1.5, 0}, {70., 0.11735262137850251`}]}]}, {
        LineBox[{{75., 0.19288627375134199`}, {75., 0.144613726248658}}], 
        LineBox[{
         Offset[{1.5, 0}, {75., 0.19288627375134199`}], 
          Offset[{-1.5, 0}, {75., 0.19288627375134199`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {75., 0.144613726248658}], 
          Offset[{-1.5, 0}, {75., 0.144613726248658}]}]}, {
        LineBox[{{80., 0.305958080379305}, {80., 0.24820858628736162`}}], 
        LineBox[{
         Offset[{1.5, 0}, {80., 0.305958080379305}], 
          Offset[{-1.5, 0}, {80., 0.305958080379305}]}], 
        LineBox[{
         Offset[{1.5, 0}, {80., 0.24820858628736162`}], 
          Offset[{-1.5, 0}, {80., 0.24820858628736162`}]}]}, {
        LineBox[{{85., 0.36811535330590084`}, {85., 0.3057976901723601}}], 
        LineBox[{
         Offset[{1.5, 0}, {85., 0.36811535330590084`}], 
          Offset[{-1.5, 0}, {85., 0.36811535330590084`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {85., 0.3057976901723601}], 
          Offset[{-1.5, 0}, {85., 0.3057976901723601}]}]}, {
        LineBox[{{90., 0.20290385048599954`}, {90., 0.1523593074087373}}], 
        LineBox[{
         Offset[{1.5, 0}, {90., 0.20290385048599954`}], 
          Offset[{-1.5, 0}, {90., 0.20290385048599954`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {90., 0.1523593074087373}], 
          Offset[{-1.5, 0}, {90., 0.1523593074087373}]}]}, {
        LineBox[{{95., 0.21215740582628306`}, {95., 0.1606496117175766}}], 
        LineBox[{
         Offset[{1.5, 0}, {95., 0.21215740582628306`}], 
          Offset[{-1.5, 0}, {95., 0.21215740582628306`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {95., 0.1606496117175766}], 
          Offset[{-1.5, 0}, {95., 0.1606496117175766}]}]}, {
        LineBox[{{100., 0.13264503600439329`}, {100., 0.0910391745219225}}], 
        LineBox[{
         Offset[{1.5, 0}, {100., 0.13264503600439329`}], 
          Offset[{-1.5, 0}, {100., 0.13264503600439329`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {100., 0.0910391745219225}], 
          Offset[{-1.5, 0}, {100., 0.0910391745219225}]}]}, {
        LineBox[{{105., 0.08345366033966886}, {105., 0.05074547385946534}}], 
        LineBox[{
         Offset[{1.5, 0}, {105., 0.08345366033966886}], 
          Offset[{-1.5, 0}, {105., 0.08345366033966886}]}], 
        LineBox[{
         Offset[{1.5, 0}, {105., 0.05074547385946534}], 
          Offset[{-1.5, 0}, {105., 0.05074547385946534}]}]}, {
        LineBox[{{110., 0.06032385386422213}, {110., 0.03355369715618602}}], 
        LineBox[{
         Offset[{1.5, 0}, {110., 0.06032385386422213}], 
          Offset[{-1.5, 0}, {110., 0.06032385386422213}]}], 
        LineBox[{
         Offset[{1.5, 0}, {110., 0.03355369715618602}], 
          Offset[{-1.5, 0}, {110., 0.03355369715618602}]}]}}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.06},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"survival rate\"", TraditionalForm], None}, {
     FormBox["knobStr", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"f0, \[Sigma] = -79.6996, 6.24051\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.671249946642548*^9, {3.6712501322079644`*^9, 3.671250142073985*^9}, 
   3.6712505341127553`*^9, {3.671256724816511*^9, 3.6712567400325327`*^9}, 
   3.6712572313602457`*^9, 3.6712572804093175`*^9, 3.6712576170268106`*^9, 
   3.6712576535958633`*^9}],

Cell[BoxData[
 RowBox[{"0.07230687628947376`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.2300703867090004`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.00872473070054846`"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "83.68314857628323`"}], "+", "f"}], ")"}], "2"]}]]}], 
  "+", 
  RowBox[{"0.4810860501078659`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.01283894915721933`"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"79.69961165413177`", "\[VeryThinSpace]", "+", "f"}], ")"}], 
      "2"]}]]}]}]], "Print",
 CellChangeTimes->{
  3.671249946642548*^9, {3.671250132217964*^9, 3.671250142073985*^9}, 
   3.671250534122755*^9, {3.671256724816511*^9, 3.6712567400325327`*^9}, 
   3.6712572313602457`*^9, 3.6712572804193172`*^9, 3.6712576170268106`*^9, 
   3.6712576535958633`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["plot with fits", "Chapter",
 CellChangeTimes->{{3.6712484028091245`*^9, 3.6712484051291275`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"gauss2", "/.", "fitsurv1"}], ",", 
        RowBox[{"gauss", "/.", "fitRSB2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"RSB2", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"RSB2", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1", ",", "1"}], "]"}], "]"}]}], "}"}], 
      ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", ".8"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<detRaman[kHz]\>\"", ",", "\"\<\>\""}], "}"}]}]}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gauss2", "/.", "fitsurv1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"BSB2", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"BSB2", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1", ",", "1"}], "]"}], "]"}]}], "}"}], 
      ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", ".8"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ErrorListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"RSB1", ",", "RSB2", ",", "BSB1", ",", "BSB2"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Blue", ",", "Red", ",", "Blue"}], "}"}]}]}], 
     "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.671248431168165*^9, 3.6712484480081887`*^9}, {
  3.671248530698306*^9, 3.6712485535663385`*^9}, {3.671249129458172*^9, 
  3.671249141265189*^9}, {3.6712499813376303`*^9, 3.671249996606658*^9}, {
  3.671250038072738*^9, 3.671250049457762*^9}, {3.6712501450049925`*^9, 
  3.6712501465329957`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwV13c81P8fAHAzIyGkbGUlGlTaXg0Sdzjuw90RoT2taFgpiUKRIindnb1l
ZvUilEhKIXeaRqXMhq+R3+f3z93j+fi87/N5rff787ilHp72B4UEBAQUyY//
fzOYFdNzj1k4v2XHUYtpNjQ8TKgWIZ3ofyxHfIYNxgvOBEnUsvDAZxH/FtJS
9evn5KpZyCxqLnD4x4Z6g2Ih3QoWTprriQYJcmDVXJ4EtZCFkU/S6pXEOZDM
in5OK2Dh331qA79IS5ScuOaQz8JVm+bwlQQH+o4YLNiXy8KHXh5ZN+ZzIOl1
pqxPJgs9XFjJWjIcmJfOXZz4gIUtkNj9QJEDpwUudSensHD20pLRxMUc+OTk
cYd9n4Uhk9XjcUs4UC2zVCUnmYVFhrJPo5Q54HPuvnptIgvtBe2kEtU58J56
R6fvBgsN9P6oyepxoHQiZu2aUBY6OZuqP9jEgbK/219rXGDhr9jLdn83c6Bi
etxLJoSFMZ/C7O22kvcXZuQPB7LwRmDU6wXAgXp5Df28syyUtilwzTLjQPva
AvUVXiwMeCXq4UnjwOsN7jVKniw8vtry1287DrzZIr9X4hQLhZfH5ITQOdC1
68ydr8dZ2NWr9CDZkYyPDgoZh1noPCxtNruXAz98X0po72PhwBWnHNdjHBg+
E5op78rChXeq7JRPcGA0YK2FsAsLcyLVgt6d5MDEpYSwz04sfLFDK9DDmwNT
N/fNPXBkYdqf2RcpZzkgXjLyS82Ghb3/9vq/uMIB7V8yHxdvY+HBuDVh2lkc
cME715S2svBKwI8PG3I4cDtKa4PKFhbuEZq3wDaP/L3Ohhj1TSwszBmYiCgi
43Nw3aqznoV3HxlxDCrJepbnJhqvZCHjP0NJ41YO7A6wtLNWY2Gw9D4R7wkO
hFh0zNioslCy55X0/D9kfeVdMmkq5P2rFzzOmuTAilyvOboSCxU+Z6/8PcsB
md6EPKdFLIxgjUk3inOh23RA4sgCFtbMFTvZanDhqNCl+ouzTPSakKveReOC
zYaNxyNnmHi9VbXZi84F4xM/5W9MM9EzJWYL15ELM28ZB+/9x8Rl9ppeS1y4
EJNlKF7xm4kng/X+mB3jQgmt0/rnTyZKXvQKy7vMBYEU/XeM90wsXeE69Qe5
0N/xPtS1l4kNPUF3PzZw4bl4/IqDfCYG203ktz/jwk2ffwE+PUxEwa+0hnYu
6O7uUI/uZKKOhFnI1EcuUH8GHqhvY6L8LvOEbKFUSNzSPmL4mIntJ1ds2EtJ
hYXKTH/1WiZ6XKTfiKGlwtXJDzMyNUzkzlf/1uyQCoGlIxITlUy8Mtrwwtkt
FdxWy2g/KmPiDp34jp9+qbBcy4Zpnk/G82UspJOTChWSrehyj4nvBga5yiJp
YPSNbmGbzMSd4iGbr0imQfZT3ovtd5nYPcuK+iebBslhQz1ad5jod28keYF6
Glz4J/n7WzwTZ9KM5Qo2psGecUt9/ygm3leLCZHySoPud09jYwKYKDaLHfcG
0yDigp5O3Hny96NNJyaH02CT3pWKW+eYuEfuiKzrnzRIOr37Q/IZJvqf0syz
Ek0HZ5lGwxxfJj5ZZlSWrZUO783qnz49zkRWv+7fWI906CuonhXYy8Qsy4Nv
XL+lQ7yjaqyIMxOdov8LWT+eDuazAdriTkyMbp74s2Q6HdKttlBkmEyUWsIL
nbcgAw73P0pUI5g4EDWQGWSUAd+Vy9dupjKxWOyJxbfADBi5XHTUdysT42UX
a2mqZ8K6zi897luYWGKesOWGfiac1VWk0jYzMS5FK2nh+kwQenp+1cqNTNTk
bD2/h5oJCuJmEwNrmbhbQncuIiATNl3tDHQyYOL4iyMSh3sz4VLM9PUdykyc
0pf4s7wgC569Xym4RomJ0vO28r9VZ4HUajcf9SVkP8qfpdU+z4LbLxuI6UVM
HG0K3JQ6kAWZsjFKpQuZyNP2eOKukQ0v4jS5yyWY+DbuX+ij+GxYnGBeJjPJ
wK+/Lif6X88BcRpXW/gvAwkG1Mam5MCkuODNP78ZuPKac1V9QQ50n6/27J1g
4H1mY+yh9hxIcl2rnzPCwNl/YvMr5HJBVXdp8u5BBsZI1GjeupsLmqUzoUGd
DCznml5qr80D2VNOo15vGfj0X29++6s8ENCrcD3whoECh26f+NaXB58SfbdQ
XjPQp7Dhz4H5+cAJ/P5rSRsD21e0F4Wz8kHbrPtwSSMDO3R/6UVM5YN+R7H1
UAkD33+wMZdZXgg04tuz0WIGNuYc33TKuBDOvlU3+/OQgf01J+XebS2EZ12R
mwWLGBhuvzzhtV0hHOLv01ucx8AkjaBBh8BC4PbPF9yVxsCIXP6FtI5CUJvc
X5J0i4HH7FK3ZVwrArNzd1Y/iGegq9CQYXxCEZyYastOu8lAy2f96jHcIqie
2cQujGXgw0ajVVlVReAkKBvTFM1A3R06o4E/iiBBsvrw+GUG7mxfmMmhPYSF
agoqVv4MLKk94qmlVQytFqqnN/sxkGpvbP7VqBgifLRfrDjNQKuoFbk124tB
4Nm6kPk+ZD0frGcmuRbDqI/Dl9aTZHzbNO1U7xZD+7PbObYHGZg8pjJOWVwC
MaeVtjoQDBw1ffqQrVoKkq3qLm7GDKQ7epTudimH2dp/9R5GDCycZ91p4lkO
o0Xvlx9cw8CtbZfPbwgth66E+7+OrmKgvcuCw8fSyiF1v3qU7woGltlsu5ww
XA6m02pV4csYuHS9OUMhrAJ8Vqgp5ckxcMZ45Htd1SN4F6Hy9r9xR4wIfN8i
va8azvbpbhQkfeyiqhPvdDUobje+Kz7miHFncLLiajUQf/e4Lx5xxODslz4Z
ZdXQftD/57ohRzTrephhJ1MDz3a+EvX64ojKjcese5/UQNlMuMlAhyOqq4QM
f9j0GOK8xhNelziixqMQ3QHDOnCp8X3p4e2I/Mjy5YfnNcK/xYNb/Y0dUTf0
bcNhnWYo7BLR2DHsgOF53j3XF7UBtX6GQslxwMdje8Ln3X8FtZUD+d0nHFCa
2tYRJfUGdiwJCFfTd8Ds4XhNfnwnDBsVpWsud8Dc6PTr3+51QjJlsElLzwFf
NGtsn0jvhD/BdLEVOg64LN9g13RFJ+T2G0SYLHXAxdtmPvP5nbCkmB9pq+SA
Ytk3FT9odcGwtWl0qIQD/hJ8PczN74K7lwTj+78RmP7mhrJTaTfwd0vGdXwl
sMV86dHemm5Ql5S/UTdI4LHXPh9YTd3AuaEdda+fwK+WT5RNu7oh855FmMMn
AsX/GRc9nOyGsvLo043dBB5SGkzctfkdtA8pOaQ9JVDoVqX/4/J3IFewjH6z
iUBXytvLxON3QPgY2IU2Eiif3H7pU9M76Jrcau3yhEBQ1dL78vYdvBd1M1/0
mMA/9yXFwybewZBG+vrLZQRW6dLWrVvZA/MIY8WDaQQq5OiIySb1wETIoYXM
VAJ31TmZ+z7ogY85SVIULoH2HUF5L9J7oEpYWNiITaBxUST/cHEPeBV3jMwk
E7hEIf/9mtYe4Mn5NcfHEyjxLLlHeqYHnplmNVy5SaDuIx39T4I8KDvW+/h8
HIG310zoZ4vx4Ea9eZnbDQJF09t1NOV5sNtHkWsYRSCWyO64q8+DwlflgQ2X
CDTpsZ95SvDg/uzQmfKLBJ74VWUo5MSDa/qavtmhBHpWyXKM9/HgUGjE0Rsh
BDqopu/wP8oDFSOW494AAiNEFnOuBPEg/MbU6l8+BH5ZePL8Cy4PnG23fdHy
IFBLfVV49VceXNhlObTcncBafbfPnj94kLrBYWKlG4FT7r66yqM8GNY4KbzR
lcDlIhqO9L/k+tFkLaoTgVSRt30MUT6kx87sP21PYGWd6rF0DT48vyx+4pwd
gZkNwn5Ny/gwck7hdDCNwAKDeoNeHT5s9DAMi7AhkE+oXx824EOL8d7UZCsC
rWhTLx9s4MNoR1Vfw06yv694Xtut+bDo2dMfzTsIXGlTXtJsy4fN1R2/2rYT
OJF00sfSng+XUodE3pkS6BdO0AwZfFD0U9H5uZmsV2SlVYgbuf6o3srxTQTe
TXq9sNqDD/tc1q7/u5HAtPqsbSMH+JBpTjEX3EDg01svH208yoctigEHF60l
0H3msyDTmw9ukldOKhsTGBd/M9fClw9h/+L8NIzI582Pylrpx4e2gezL+qsJ
jH70JZZ/llxf3pO2zYCMl+79pTGED5dzBvJ2riBwdhdr8HAoH7JTxkst9Aks
G6tdKXCJDxNXJJvs9AjMCRg6Lx/Oh3Dm5oGDWgSeP3NhsOEaH+DPklaHZQQ+
YbXOrIvmw+TNv0XmSwmcmTx1/U4MH469LAnS0SAw96W3zvZYPmidvLl/kTqB
NwMJnYtxfOBL+liKqhE41h13t+ImH2x2r17Ur0xel2zrE7rNB7G+BdNvlMh+
BjeVKCbwAUN/fGxYQuC8/oW/1RP5YFyTlZuqSODRXqiTSuLDkFNEXPwiAq8+
SLAaJ506eehsmAKBax8bQutdsl/rtM0OyJHXRdkHXe6R9XkltIJYSKAUxfOW
wn0yP89PMmayBJoZsgyRNCzA32tlCCw5EKjvlkLml32fpyVNYPikaNQv0kV7
gurkF5D738SYHvSAzHfAOUNYijw/HlGDp0hrhW2OnpAkUORoodQJNpnvUiXf
LxLkfAQ9nX1F+tbjv8wOcQJ5IfPtDDlk/i6dpk/EyP2yR3ReAGmx6RLt4nkE
Xhe2Vq0ljYk3Jbmi5H43unrzN+lzJj6jcSIELk3zPb6US9bjDa3zojC5fyJe
cneQHvJeXe0jRN6P6bvVkXSqjDTHQ5DAW992rd9H2iXvxxV7AQILD66P2Uta
kdJycuccHa9SKRY2pF9+zaIb/6Pj/NOJbutIR4RHbFo2S8d/YtAjTXqH9mEN
uRk61kR6lfSS8UzVmYsKTdOx7eXJkQeki/dpD439R0dr0SvXmKRPzAq9+jRJ
R8hSiRQhrXP3U9mrv3SsjU76mkrW4/1GTK77Q0fJrtDsTaQTOu9fLPpNxxNT
ri/ryXrSTgcdYf+io3hNG2M7aQm5vTaxE3QMMA4ye0j2o75g87rQcToeq9K5
vYT02qG/c26jdIwSTDleT/b7R0RnP22Ejn/GjMdESafqlrZsH6bjAabFh23J
ZP4ePgmaP+gY3Kfx31Vyfl7O0YJkh+jYw1qq9+AOmf+91fsFvtMx74NafRY5
f1PdP1Z9HKSjpdUKsyRyXov9WxTaB+h4kTq2MvQWma9C9tTjfjqqxS+9ujee
zM/2cFPKFzrObe1IGSX3Q33TJ5d9H+hYH+Z2KiaKDw8NE2nu7+n4Xlp+ozG5
vzhxNrv299JR4dv+6ZZI8jxxrVp+mEfHwhGG3ydyP5r9iZ841UVHo3jqofgL
fFi3lzLg1UnH+JIDhl+D+aBdL/jO5y0dRYKNp4yC+CAac6rWv4OOSxtfl2Sc
40OTzp7I4Jd07E5790HFhw9l1/4FXGijY5e0sJqmF3l+jpWcuviCju/WvfRR
PsWHKzVLifAWOm4USfYeI8+jPQ7T6jFP6djKvz633J08L8PyS+49pqNdbso9
JM/H6u8HMlJq6ajKmojTo/Ahl6aSxK4h4w/Sagnbw4co1YiQtCo6bs1fLrts
Fzn/Je5WeeV0JNRu7vpKnrftXxQ+VheQ9e3M0f//+Y2WLa9r8+loYTXR6qPK
h8KC0EbMo6Ps6Pqv65X4EBswnN2QQ8b74MitFDk+2Ms/82vNIPNJG1krSL4P
3uwMmM9PoePi8P5hAfL94rXQZfrzfTrKlA+JWPXxQOqj6dC3e3QcX/R51dWP
PDALEmr5e5eO6+O+t41086CkPPKqfCIdrygEFdOaeXDTMFGCcoOOaxQMXpzI
5IG9YqlY5QU6/m24P3+VG/l+6rv9F0PomBERssrDmQdXi88OPg2mY9FU0WS0
Iw/qaVufvg2ko+/58oRWKg+Mrz0JHztLxyNOj+MGNvJgocBrUX1vOuqqCBnE
yfCg/duwcKI7Oc+DL0aHy3pAwIP7KtKNjq6RbpaphT2wpoeRErCP3H/OMqm0
7B6IfY6b97nQ8bravJCYez1gnxPnrcsi5znENjPlUg90nDD5UEKjI15uaFO3
6YHOkaDKV0BH0doVfs/576D3t5T3fHU6tieYaNV/7gYzkzsUGTU6OhpH1Yvz
uiHXX0dXXpWOyRIhZy07uiHw7zaesjId73lXWjx60g3K/50yX6FIx3Vab2n0
1G5wnGlXspSm41izpcjZA93wUuhWffg/e2TM28iq/tgFdTJqCkIf7FEk5ovK
7PNOKIvpMihMssdytQ+XV+94A7c2noi5x7BHV1W4tjrtFViNjutKK9njn5I6
T+rZNpBdoL3O5K0dKogmVnWEN0PuBoszn27ZYUqboQPPsRGMo81EWxl2OH6F
tbSrsg5UDW2jax3tcENrTatDbh2ItbAWFTnY4UFTTuz7e3XAF/fUuU23Q6/u
uyelQ+vgctgdczdbO9yeNhE3aFEH3QHDl3/ttkPmfqnIC10IwccS56mZ2OFF
H7mP3JnH8Nzih9gpBTscyOUl9ryphh/5bck+8nZY6a9edqm2GqQVi4zOyNlh
rnk2zTSzGuz6/JwvyJLrS5TGBwOqofvCXH6clB2Wua6Mk9KuhoFHco7lIna4
WUHFO/FMFQgabkoV+E3D+rPbWh4YVMKymyqbRH/RMMlV8I3P4kowm5p9ITFB
Q+oy5kcH4UqIeFb/V26Mhg1jZaM2vEcgfZBK0flJwzfB8kekoh6B6v1945b9
NEwNbzErHK2AjbLh22++peGF/U2Vfk3lMKy5pfjiG/J5Qlf93j0k/98Yjer4
dNDQbb3QPlpKOcjSnebbvaKhrNj8+2fOlsPXW6s6pV/QcPiq9rdsg3JIVOk6
frWBhiEpY0fv3SqDSd3lCaHFNPzoFiPud6YU8jf0Sng/pOHFTAu5VYdK4cCe
uEC3IhrOiH5Y8x9RCu1HZ9yhgIbGLjvDG41LITO33XA2m4Ym759cXD9SAkzj
c/VnOTQ8bBm9/NjxEijf9vynZywN+RY/Dn3wKoZURcZJ7xs0PLurfNFTj2KI
G/nyw+c6De9P3ztZQxTDCfbskF80DXMDv/5+u7EYlokafQ+IpGH2ttO+pYLF
ENWaMHAllIb/Floe0739EDycD35I8SbzRfXk2OYisF037sr2oqHinaUm22qK
YOuCkPccT3K95DynP4VFsPhxYm/aSRq6+t5Wjk0sgtZlrbycozRMDjcMPHyk
CDZ8N+4ud6fhIPsC97pkEUidE3j10o6GO94a6kQxCyGtssK6k0bDBRG5sVI2
hWA64/Wcb0tDEd7Oz4m7CsEr5NOTb9Y0tAtVl3q7qhDeXK4vE7ai4YNFeyN7
RAshOS4secNOGmYKBdVonygAw1zxIynGNGwznF4+vC0fGn9iX5oRDYMpjmGN
Bvnguvqce+4aGv5cO3PyoVI+3Hj4zenRKhpuX6OZ1vo7D35VPLfuWEFD/cKZ
IoGCPKhujForpkX2y2OuiaGTB5QPsnOn5P9f73dndi/NhbPP77Lc5Gj49Zy5
3F7ZXEgv1S2xW0hD0YPrvCPmckAgauvRdTI0rEgW1tZ5nwOlG490/CdJQ3u/
vPHjyTmgEfc4I0yIhlpZx3+pqOXAQCT/wbovtmg++WPByVXZsN1t3GHxJ1us
Fu58s0YzG+6aiM+fem+Lmq0XssTlsoH2Za3f4x5bbDDy1fv1Owsqt16ztHpt
i7WGO/QqarMgZmTT+L46W6SlzX36RM8CE4eEXddSbNGC8Cs1iMqEuaq9cnH3
bDFcLc5OPjQTni1b9inxri3yla7pS/pngvNobnB6gi1yBi9Qddwy4cK1+kd1
18n47E8ny6zPhOa6n6snQ2zRveCWd/qnDNi7ykz1oJstukk83+xpngE6tySG
jrva4qWnLuUaWzNgeLrtkc9eWzRdVBHYa5wBoc0sxgWmLW7gvUu7oJkB6Qc8
4+7SbNH/ck77/pl0GElKEn+93RbDaPyUG2XpcFFs7JfpUls0494dVl+XDqfr
nENUNGyR2fj6aplBOhwKaJKYVLVF+ej5XGetdLAcuatetMQWezPrBdvk0kG2
a/ceLVlbzNu7+qbdeBrcT0++KzZng2J+16Qai9Og0nzPzna+Dc4miYR/hTTI
nXvYmttjg/pOt79LbyLXP1JjRHbboPOPhortxmkQunLi+M43Nhh5JYDepJ0G
exbdv1XSYoMhJxe1MyTToLNv4mtipQ0OLFMOC+9KhbFLKdfdE21QaMHxxuxz
qbBZxl1hz20bFOU1/9h8OhXCkpbdWRVvg2oVh6zfnEoFxaI0zvR1GwwUVgxf
doBc/z6n9NYV8n6mDscMbFPh4sYKXrO/Deab73r9RTcV5H626xk72KCda7Nv
Ip8LzmfjcpfQbdDle/HxDd1cSBUmjOZoNvhRnC//voMLJspdm1upNmjMM7DY
2cIFJ4te60NmNnhWKGzmQCUXOOxvvklrbfBbcOgniSQurHUUQiE5GzSfV7c0
3JUL3719XRfI2mB8a+LXHc7k+ui+mcXSNngNNm8QZnJBrrFp00pJG4xRfky5
bceF0bXXihlCNpgzJuU7a8aF/IUKGbnj1jjuP+/zM0MurHihE+PYYY2XW9Ip
GgJc+Pz1tqH7K2tUdUvXDZrlQJKIeMvxl9b45IPnnQ9THJDY+l0stMUa/xiz
Vzz8zYGv2fmhOU+sUbJWfkv0EAfSIzb4CZRYY5SJqOGibg4sM7Pcmx1vjdyF
e8tMSzggVLyv7GqcNd7f1u30u4gDn5f6yx6/YY3BawifwgIOcOc4DQZR1qhg
JM5fm8MB7aoZw7xL1ujn0vHsFIcDusaFswU+1qgT53cvP5YD89hNjBte1uhQ
GjqdeZ0DAzK9RV6nrPFHjyEzI5oDGT8lDhkds0bR2ayxgkgOLM/a3/bQ3RqL
r53oHwnlwArNxSmlNGtspfmMaftyQPL6yv9u2ZCusZXe682B77O76P5Ua9ze
5/T4ticHcnheYhv2WKPbnpwGxRMcMEx47lkB1pjxZmHe9oMcWCUdvL1qlTXG
7Bq4Y8LkwNqZvk8oZY3nhP0/hG7nwMXpbIdGSWvMtcwiNgAH2qe8mpvFrfEj
LrQY2caBU//NFL4WsUbTBN+4Q1s4kP1H4ULfDBUnWk9Y+5iQ9RwzUxf/ScXQ
lsLyKUMOeI9KxkkNUTH/lMqCTgMO4Ei76MJvVJSShvvFKzjgOrz3p1I/FQ2P
LD3gt5zs59DpaoNeKrYFpsnJa3NAbiDVyfYFFT/O4xcUq3DAvf9YG72FioR5
3X+Fyhwo7Fuzk9lMxecdBbsKlThg86Va372Riu6rgptLFnPg6sc3kz41VPxd
93HzW3myvzyRhNt5pBkKZV5SHBh7eaCjN5qKzYKautP/2JD4IHTHj2tUrH1v
PrietKn3/YKpSCr2DcoY+cyy4apc97XF4VRMN42jj0yzQduBYmYXTEX1I1YR
05NscOwxKm04RUXmrJIra4INM9k2Wh0nqBgoe/xIzjgbOAHHYz8do6JDAeXV
vzE2jKimnfx3iIodbQ0lWaNsiNi3RHfjPiqmxBcHyQyzobLv3+0cWypquWvM
LvnGBrdSFdFKaypmHrz6IuQrG+aFb/R9RqGidc7RzsFBNtD1fGz7Lag4lh0a
UTXAhh9H+8U0tlMxOrJltXcfG9RHWs7GraHi+U61VPmPbLj0X6LTuYVUPGM6
ydXtZoO9mnOYiwwVtSt4h9O72KC5Qy1/xwIqDp/fbqNHujaCLSgpQcWjR9ae
M+xkw9Ti7MwkASpWb1wrZvaGDV4mVX+qRii4T6VfKr2dDeAUpPngJwWfHRr6
akJaOhiswoYouGbl9yfPXrIhp/HJPeogBYOvBZwaaWPDANFq1vuegvJzJ/fu
ecEGF9/euH8vKDgyN83Tfc4m5zml+nMLBT35LqVNzeTzK90HmpopOBakeOow
6UShgU3XGykYZKDln/OMDW9ihz9q1FDQLfB63ranbLAqnFu1I5eCUgeVDCMb
2LDh59KWS1cp+EB5PKPwMRtOs29KR0VQ8MTL6u6TpB86iNrHh1PQVGPsngHp
lbVfu1MvUnDKn/cxs5YNWtcLBhrPU1Bzs9zy7Bo2yBhtExI/TkGNpI6apio2
UPvzzWWPUvDGtoc5UaSv3tGMXHKYgkMPhVTppEWFRGT191PQ5kp9yKdKNky/
fq5m5UzBo955JiKkB08zN0VRKFgx/jvErYKcN/3ngfGWFKxyjlReRdqjdwsm
W1BQsSJWb6acDb3mGhZ5uyj4+MHOW3dIdygOEG1bKKi73y7tXRkbHlf4eska
UnBe3pqXJ0vZkDATkxEvRUEV0RTWx4ds+Dwr5+AhSUFQOLi2jLTh3G2hNeJk
PKK081Gk6wVTXFqEKaidGEzZTHp4XoG80LQV+vM1PyQVsWH3wpchnt+s8Pev
tLFThWyIlaOv3DZohc73M/UopPnyXT2S/VZILPWp0iPto/hhffpHK/x16/nk
pwI23FMZGeJ3WWGp7aKHTqR/6cgwrZqsUO1wgPvefHKe9G6KLmmwQi9TrQWm
pK8uX1zcX2eFWQnGEpqkNQ00pENrrDB5znOkL4+s/5rVDeUlVsiS1NznQ5q7
2XaNDtcKB0NKdO/mkvFv6egdf2CFq4uvh4SS3riNcQ3vW2GXi4naEdJtsG/A
OckKC2I2aJuQnjLzTI6LtcI21Ts2b3PYYL57wtLtuhUqdxFVNaRvWJz5uzLa
Ct9R0w+nk9a1CrFvjrBC+aJrgWdJe1OEBRLCrbCF9+WLO+lq6pW8A2FWeGmd
UwSFtJjNfGfji1a4+CBxdD1pe9vr4gIXrHBj0KZwDdL/A+OIq7U=
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], PointBox[{{-103., 0.042735042735042736`}, {-98., 
       0.06986899563318777}, {-93., 0.13513513513513514`}, {-88., 
       0.23684210526315788`}, {-83., 0.5113122171945701}, {-78., 
       0.5546558704453441}, {-73., 0.273972602739726}, {-68., 
       0.23809523809523808`}, {-63., 0.12350597609561753`}, {-58., 
       0.09090909090909091}, {-53., 
       0.0963302752293578}}], {{
        LineBox[{{-103., 0.05801749213187276}, {-103., 0.03134420999578681}}],
         LineBox[{
         Offset[{1.5, 0}, {-103., 0.05801749213187276}], 
          Offset[{-1.5, 0}, {-103., 0.05801749213187276}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-103., 0.03134420999578681}], 
          Offset[{-1.5, 0}, {-103., 0.03134420999578681}]}]}, {
        LineBox[{{-98., 0.08865217171670323}, {-98., 0.054826089152862}}], 
        LineBox[{
         Offset[{1.5, 0}, {-98., 0.08865217171670323}], 
          Offset[{-1.5, 0}, {-98., 0.08865217171670323}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-98., 0.054826089152862}], 
          Offset[{-1.5, 0}, {-98., 0.054826089152862}]}]}, {
        LineBox[{{-93., 0.15972285887447635`}, {-93., 0.11381974202238464`}}],
         LineBox[{
         Offset[{1.5, 0}, {-93., 0.15972285887447635`}], 
          Offset[{-1.5, 0}, {-93., 0.15972285887447635`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-93., 0.11381974202238464`}], 
          Offset[{-1.5, 0}, {-93., 0.11381974202238464`}]}]}, {
        LineBox[{{-88., 0.266109104289961}, {-88., 0.20987342846113072`}}], 
        LineBox[{
         Offset[{1.5, 0}, {-88., 0.266109104289961}], 
          Offset[{-1.5, 0}, {-88., 0.266109104289961}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-88., 0.20987342846113072`}], 
          Offset[{-1.5, 0}, {-88., 0.20987342846113072`}]}]}, {
        LineBox[{{-83., 0.5448105130867241}, {-83., 0.4777120094357984}}], 
        LineBox[{
         Offset[{1.5, 0}, {-83., 0.5448105130867241}], 
          Offset[{-1.5, 0}, {-83., 0.5448105130867241}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-83., 0.4777120094357984}], 
          Offset[{-1.5, 0}, {-83., 0.4777120094357984}]}]}, {
        LineBox[{{-78., 0.5859960235734853}, {-78., 0.52287494416845}}], 
        LineBox[{
         Offset[{1.5, 0}, {-78., 0.5859960235734853}], 
          Offset[{-1.5, 0}, {-78., 0.5859960235734853}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-78., 0.52287494416845}], 
          Offset[{-1.5, 0}, {-78., 0.52287494416845}]}]}, {
        LineBox[{{-73., 0.3050865294243453}, {-73., 0.24491347057565477`}}], 
        LineBox[{
         Offset[{1.5, 0}, {-73., 0.3050865294243453}], 
          Offset[{-1.5, 0}, {-73., 0.3050865294243453}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-73., 0.24491347057565477`}], 
          Offset[{-1.5, 0}, {-73., 0.24491347057565477`}]}]}, {
        LineBox[{{-68., 0.26720978387725547`}, {-68., 0.2112384919848135}}], 
        LineBox[{
         Offset[{1.5, 0}, {-68., 0.26720978387725547`}], 
          Offset[{-1.5, 0}, {-68., 0.26720978387725547`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-68., 0.2112384919848135}], 
          Offset[{-1.5, 0}, {-68., 0.2112384919848135}]}]}, {
        LineBox[{{-63., 0.14577990683136155`}, {-63., 0.10422009316863846`}}],
         LineBox[{
         Offset[{1.5, 0}, {-63., 0.14577990683136155`}], 
          Offset[{-1.5, 0}, {-63., 0.14577990683136155`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-63., 0.10422009316863846`}], 
          Offset[{-1.5, 0}, {-63., 0.10422009316863846`}]}]}, {
        LineBox[{{-58., 0.11162857777341183`}, {-58., 0.07371624981279506}}], 
        LineBox[{
         Offset[{1.5, 0}, {-58., 0.11162857777341183`}], 
          Offset[{-1.5, 0}, {-58., 0.11162857777341183`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-58., 0.07371624981279506}], 
          Offset[{-1.5, 0}, {-58., 0.07371624981279506}]}]}, {
        LineBox[{{-53., 0.11819574264833119`}, {-53., 0.07815128931513914}}], 
        LineBox[{
         Offset[{1.5, 0}, {-53., 0.11819574264833119`}], 
          Offset[{-1.5, 0}, {-53., 0.11819574264833119`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-53., 0.07815128931513914}], 
          Offset[{-1.5, 0}, {-53., 0.07815128931513914}]}]}}}, 
     {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], PointBox[{{-103., 0.05847953216374269}, {-98., 
       0.011976047904191617`}, {-93., 0.06741573033707865}, {-88., 
       0.22282608695652173`}, {-83., 0.42134831460674155`}, {-78., 
       0.4228571428571429}, {-73., 0.23391812865497075`}, {-68., 
       0.15757575757575756`}, {-63., 0.046632124352331605`}, {-58., 
       0.04}, {-53., 
       0.023391812865497075`}}], {{
        LineBox[{{-103., 0.079121460638031}, {-103., 0.04297156261778295}}], 
        LineBox[{
         Offset[{1.5, 0}, {-103., 0.079121460638031}], 
          Offset[{-1.5, 0}, {-103., 0.079121460638031}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-103., 0.04297156261778295}], 
          Offset[{-1.5, 0}, {-103., 0.04297156261778295}]}]}, {
        LineBox[{{-98., 0.02376187265447969}, {-98., 0.006000032107425075}}], 
        LineBox[{
         Offset[{1.5, 0}, {-98., 0.02376187265447969}], 
          Offset[{-1.5, 0}, {-98., 0.02376187265447969}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-98., 0.006000032107425075}], 
          Offset[{-1.5, 0}, {-98., 0.006000032107425075}]}]}, {
        LineBox[{{-93., 0.08872880665275452}, {-93., 0.05093599781651922}}], 
        LineBox[{
         Offset[{1.5, 0}, {-93., 0.08872880665275452}], 
          Offset[{-1.5, 0}, {-93., 0.08872880665275452}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-93., 0.05093599781651922}], 
          Offset[{-1.5, 0}, {-93., 0.05093599781651922}]}]}, {
        LineBox[{{-88., 0.25495639498009015`}, {-88., 0.19369225366855855`}}],
         LineBox[{
         Offset[{1.5, 0}, {-88., 0.25495639498009015`}], 
          Offset[{-1.5, 0}, {-88., 0.25495639498009015`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-88., 0.19369225366855855`}], 
          Offset[{-1.5, 0}, {-88., 0.19369225366855855`}]}]}, {
        LineBox[{{-83., 0.45869681357566183`}, {-83., 0.3848786054187515}}], 
        LineBox[{
         Offset[{1.5, 0}, {-83., 0.45869681357566183`}], 
          Offset[{-1.5, 0}, {-83., 0.45869681357566183`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-83., 0.3848786054187515}], 
          Offset[{-1.5, 0}, {-83., 0.3848786054187515}]}]}, {
        LineBox[{{-78., 0.460535675364284}, {-78., 0.38605523372662504`}}], 
        LineBox[{
         Offset[{1.5, 0}, {-78., 0.460535675364284}], 
          Offset[{-1.5, 0}, {-78., 0.460535675364284}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-78., 0.38605523372662504`}], 
          Offset[{-1.5, 0}, {-78., 0.38605523372662504`}]}]}, {
        LineBox[{{-73., 0.2677800691776007}, {-73., 0.2031501633805388}}], 
        LineBox[{
         Offset[{1.5, 0}, {-73., 0.2677800691776007}], 
          Offset[{-1.5, 0}, {-73., 0.2677800691776007}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-73., 0.2031501633805388}], 
          Offset[{-1.5, 0}, {-73., 0.2031501633805388}]}]}, {
        LineBox[{{-68., 0.1879921721387622}, {-68., 0.13128493629497276`}}], 
        LineBox[{
         Offset[{1.5, 0}, {-68., 0.1879921721387622}], 
          Offset[{-1.5, 0}, {-68., 0.1879921721387622}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-68., 0.13128493629497276`}], 
          Offset[{-1.5, 0}, {-68., 0.13128493629497276`}]}]}, {
        LineBox[{{-63., 0.06428651495373543}, {-63., 0.03365162937616148}}], 
        LineBox[{
         Offset[{1.5, 0}, {-63., 0.06428651495373543}], 
          Offset[{-1.5, 0}, {-63., 0.06428651495373543}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-63., 0.03365162937616148}], 
          Offset[{-1.5, 0}, {-63., 0.03365162937616148}]}]}, {
        LineBox[{{-58., 0.05761406679823192}, {-58., 0.02761320592904081}}], 
        LineBox[{
         Offset[{1.5, 0}, {-58., 0.05761406679823192}], 
          Offset[{-1.5, 0}, {-58., 0.05761406679823192}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-58., 0.02761320592904081}], 
          Offset[{-1.5, 0}, {-58., 0.02761320592904081}]}]}, {
        LineBox[{{-53., 0.03801589025245347}, {-53., 0.014309691142895365`}}],
         LineBox[{
         Offset[{1.5, 0}, {-53., 0.03801589025245347}], 
          Offset[{-1.5, 0}, {-53., 0.03801589025245347}]}], 
        LineBox[{
         Offset[{1.5, 0}, {-53., 0.014309691142895365`}], 
          Offset[{-1.5, 0}, {-53., 0.014309691142895365`}]}]}}}, 
     {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], PointBox[{{50., 0.05286343612334802}, {55., 
       0.045454545454545456`}, {60., 0.05752212389380531}, {65., 
       0.08438818565400844}, {70., 0.13852813852813853`}, {75., 
       0.16736401673640167`}, {80., 0.27615062761506276`}, {85., 
       0.33624454148471616`}, {90., 0.1762114537444934}, {95., 
       0.18502202643171806`}, {100., 0.11013215859030837`}, {105., 
       0.06521739130434782}, {110., 
       0.045081967213114756`}}], {{
        LineBox[{{50., 0.06977268574510911}, {50., 0.03987643706190842}}], 
        LineBox[{
         Offset[{1.5, 0}, {50., 0.06977268574510911}], 
          Offset[{-1.5, 0}, {50., 0.06977268574510911}]}], 
        LineBox[{
         Offset[{1.5, 0}, {50., 0.03987643706190842}], 
          Offset[{-1.5, 0}, {50., 0.03987643706190842}]}]}, {
        LineBox[{{55., 0.06081777474136214}, {55., 0.033832431019954735`}}], 
        LineBox[{
         Offset[{1.5, 0}, {55., 0.06081777474136214}], 
          Offset[{-1.5, 0}, {55., 0.06081777474136214}]}], 
        LineBox[{
         Offset[{1.5, 0}, {55., 0.033832431019954735`}], 
          Offset[{-1.5, 0}, {55., 0.033832431019954735`}]}]}, {
        LineBox[{{60., 0.07504778313302413}, {60., 0.04389494814450893}}], 
        LineBox[{
         Offset[{1.5, 0}, {60., 0.07504778313302413}], 
          Offset[{-1.5, 0}, {60., 0.07504778313302413}]}], 
        LineBox[{
         Offset[{1.5, 0}, {60., 0.04389494814450893}], 
          Offset[{-1.5, 0}, {60., 0.04389494814450893}]}]}, {
        LineBox[{{65., 0.10423693857321399`}, {65., 0.06803196898981122}}], 
        LineBox[{
         Offset[{1.5, 0}, {65., 0.10423693857321399`}], 
          Offset[{-1.5, 0}, {65., 0.10423693857321399`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {65., 0.06803196898981122}], 
          Offset[{-1.5, 0}, {65., 0.06803196898981122}]}]}, {
        LineBox[{{70., 0.16281979241460096`}, {70., 0.11735262137850251`}}], 
        LineBox[{
         Offset[{1.5, 0}, {70., 0.16281979241460096`}], 
          Offset[{-1.5, 0}, {70., 0.16281979241460096`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {70., 0.11735262137850251`}], 
          Offset[{-1.5, 0}, {70., 0.11735262137850251`}]}]}, {
        LineBox[{{75., 0.19288627375134199`}, {75., 0.144613726248658}}], 
        LineBox[{
         Offset[{1.5, 0}, {75., 0.19288627375134199`}], 
          Offset[{-1.5, 0}, {75., 0.19288627375134199`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {75., 0.144613726248658}], 
          Offset[{-1.5, 0}, {75., 0.144613726248658}]}]}, {
        LineBox[{{80., 0.305958080379305}, {80., 0.24820858628736162`}}], 
        LineBox[{
         Offset[{1.5, 0}, {80., 0.305958080379305}], 
          Offset[{-1.5, 0}, {80., 0.305958080379305}]}], 
        LineBox[{
         Offset[{1.5, 0}, {80., 0.24820858628736162`}], 
          Offset[{-1.5, 0}, {80., 0.24820858628736162`}]}]}, {
        LineBox[{{85., 0.36811535330590084`}, {85., 0.3057976901723601}}], 
        LineBox[{
         Offset[{1.5, 0}, {85., 0.36811535330590084`}], 
          Offset[{-1.5, 0}, {85., 0.36811535330590084`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {85., 0.3057976901723601}], 
          Offset[{-1.5, 0}, {85., 0.3057976901723601}]}]}, {
        LineBox[{{90., 0.20290385048599954`}, {90., 0.1523593074087373}}], 
        LineBox[{
         Offset[{1.5, 0}, {90., 0.20290385048599954`}], 
          Offset[{-1.5, 0}, {90., 0.20290385048599954`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {90., 0.1523593074087373}], 
          Offset[{-1.5, 0}, {90., 0.1523593074087373}]}]}, {
        LineBox[{{95., 0.21215740582628306`}, {95., 0.1606496117175766}}], 
        LineBox[{
         Offset[{1.5, 0}, {95., 0.21215740582628306`}], 
          Offset[{-1.5, 0}, {95., 0.21215740582628306`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {95., 0.1606496117175766}], 
          Offset[{-1.5, 0}, {95., 0.1606496117175766}]}]}, {
        LineBox[{{100., 0.13264503600439329`}, {100., 0.0910391745219225}}], 
        LineBox[{
         Offset[{1.5, 0}, {100., 0.13264503600439329`}], 
          Offset[{-1.5, 0}, {100., 0.13264503600439329`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {100., 0.0910391745219225}], 
          Offset[{-1.5, 0}, {100., 0.0910391745219225}]}]}, {
        LineBox[{{105., 0.08345366033966886}, {105., 0.05074547385946534}}], 
        LineBox[{
         Offset[{1.5, 0}, {105., 0.08345366033966886}], 
          Offset[{-1.5, 0}, {105., 0.08345366033966886}]}], 
        LineBox[{
         Offset[{1.5, 0}, {105., 0.05074547385946534}], 
          Offset[{-1.5, 0}, {105., 0.05074547385946534}]}]}, {
        LineBox[{{110., 0.06032385386422213}, {110., 0.03355369715618602}}], 
        LineBox[{
         Offset[{1.5, 0}, {110., 0.06032385386422213}], 
          Offset[{-1.5, 0}, {110., 0.06032385386422213}]}], 
        LineBox[{
         Offset[{1.5, 0}, {110., 0.03355369715618602}], 
          Offset[{-1.5, 0}, {110., 0.03355369715618602}]}]}}}, 
     {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], PointBox[{{50., 0.060240963855421686`}, {55., 
       0.021621621621621623`}, {60., 0.011695906432748537`}, {65., 
       0.016666666666666666`}, {70., 0.010869565217391304`}, {75., 
       0.016666666666666666`}, {80., 0.022988505747126436`}, {85., 
       0.01910828025477707}, {90., 0.017142857142857144`}, {95., 
       0.028409090909090908`}, {100., 0.031088082901554404`}, {105., 
       0.023809523809523808`}, {110., 
       0.}}], {{
        LineBox[{{50., 0.08147339547388649}, {50., 0.04427510752012547}}], 
        LineBox[{
         Offset[{1.5, 0}, {50., 0.08147339547388649}], 
          Offset[{-1.5, 0}, {50., 0.08147339547388649}]}], 
        LineBox[{
         Offset[{1.5, 0}, {50., 0.04427510752012547}], 
          Offset[{-1.5, 0}, {50., 0.04427510752012547}]}]}, {
        LineBox[{{55., 0.035163811529628615`}, {55., 0.01322328524456494}}], 
        LineBox[{
         Offset[{1.5, 0}, {55., 0.035163811529628615`}], 
          Offset[{-1.5, 0}, {55., 0.035163811529628615`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {55., 0.01322328524456494}], 
          Offset[{-1.5, 0}, {55., 0.01322328524456494}]}]}, {
        LineBox[{{60., 0.023210362541851805`}, {60., 0.005859404900008659}}], 
        LineBox[{
         Offset[{1.5, 0}, {60., 0.023210362541851805`}], 
          Offset[{-1.5, 0}, {60., 0.023210362541851805`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {60., 0.005859404900008659}], 
          Offset[{-1.5, 0}, {60., 0.005859404900008659}]}]}, {
        LineBox[{{65., 0.029220189955800176`}, {65., 0.009453843193371095}}], 
        LineBox[{
         Offset[{1.5, 0}, {65., 0.029220189955800176`}], 
          Offset[{-1.5, 0}, {65., 0.029220189955800176`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {65., 0.009453843193371095}], 
          Offset[{-1.5, 0}, {65., 0.009453843193371095}]}]}, {
        LineBox[{{70., 0.021582356944819223`}, {70., 0.005444670082207805}}], 
        LineBox[{
         Offset[{1.5, 0}, {70., 0.021582356944819223`}], 
          Offset[{-1.5, 0}, {70., 0.021582356944819223`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {70., 0.005444670082207805}], 
          Offset[{-1.5, 0}, {70., 0.005444670082207805}]}]}, {
        LineBox[{{75., 0.029220189955800176`}, {75., 0.009453843193371095}}], 
        LineBox[{
         Offset[{1.5, 0}, {75., 0.029220189955800176`}], 
          Offset[{-1.5, 0}, {75., 0.029220189955800176`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {75., 0.009453843193371095}], 
          Offset[{-1.5, 0}, {75., 0.009453843193371095}]}]}, {
        LineBox[{{80., 0.03736644988501382}, {80., 0.014062121543557607`}}], 
        LineBox[{
         Offset[{1.5, 0}, {80., 0.03736644988501382}], 
          Offset[{-1.5, 0}, {80., 0.03736644988501382}]}], 
        LineBox[{
         Offset[{1.5, 0}, {80., 0.014062121543557607`}], 
          Offset[{-1.5, 0}, {80., 0.014062121543557607`}]}]}, {
        LineBox[{{85., 0.033460796543147285`}, {85., 0.01084300092520714}}], 
        LineBox[{
         Offset[{1.5, 0}, {85., 0.033460796543147285`}], 
          Offset[{-1.5, 0}, {85., 0.033460796543147285`}]}], 
        LineBox[{
         Offset[{1.5, 0}, {85., 0.01084300092520714}], 
          Offset[{-1.5, 0}, {85., 0.01084300092520714}]}]}, {
        LineBox[{{90., 0.03004803999756968}, {90., 0.009724687275157589}}], 
        LineBox[{
         Offset[{1.5, 0}, {90., 0.03004803999756968}], 
          Offset[{-1.5, 0}, {90., 0.03004803999756968}]}], 
        LineBox[{
         Offset[{1.5, 0}, {90., 0.009724687275157589}], 
          Offset[{-1.5, 0}, {90., 0.009724687275157589}]}]}, {
        LineBox[{{95., 0.04384225106157448}, {95., 0.018304641593792758`}}], 
        LineBox[{
         Offset[{1.5, 0}, {95., 0.04384225106157448}], 
          Offset[{-1.5, 0}, {95., 0.04384225106157448}]}], 
        LineBox[{
         Offset[{1.5, 0}, {95., 0.018304641593792758`}], 
          Offset[{-1.5, 0}, {95., 0.018304641593792758`}]}]}, {
        LineBox[{{100., 0.04619799858160884}, {100., 0.020812310696741675`}}],
         LineBox[{
         Offset[{1.5, 0}, {100., 0.04619799858160884}], 
          Offset[{-1.5, 0}, {100., 0.04619799858160884}]}], 
        LineBox[{
         Offset[{1.5, 0}, {100., 0.020812310696741675`}], 
          Offset[{-1.5, 0}, {100., 0.020812310696741675`}]}]}, {
        LineBox[{{105., 0.03868830359302591}, {105., 0.014566134276796566`}}],
         LineBox[{
         Offset[{1.5, 0}, {105., 0.03868830359302591}], 
          Offset[{-1.5, 0}, {105., 0.03868830359302591}]}], 
        LineBox[{
         Offset[{1.5, 0}, {105., 0.014566134276796566`}], 
          Offset[{-1.5, 0}, {105., 0.014566134276796566`}]}]}, {
        LineBox[{{110., 0.006024096385542169}, {110., 0.}}], 
        LineBox[{
         Offset[{1.5, 0}, {110., 0.006024096385542169}], 
          Offset[{-1.5, 0}, {110., 0.006024096385542169}]}], 
        LineBox[{
         Offset[{1.5, 0}, {110., 0.}], 
          Offset[{-1.5, 0}, {110., 0.}]}]}}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-100., 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], None}, {
     FormBox["\"detRaman[kHz]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, {0, 0.8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.671248406919131*^9, 3.671248448248189*^9, 3.671248553836339*^9, {
   3.6712491588652143`*^9, 3.671249173686242*^9}, {3.671250027710717*^9, 
   3.6712500511637645`*^9}, 3.6712501468729973`*^9, 3.671250536332758*^9, 
   3.6712567481045446`*^9, 3.671257232650247*^9, 3.671257293109335*^9, {
   3.6712576253578234`*^9, 3.671257654809866*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["calculate nbar", "Chapter",
 CellChangeTimes->{{3.671248463600211*^9, 3.671248464820213*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"nbar", ",", "T1", ",", "ftrap"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ftrap", "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"f02", "-", "f0"}], "2"], "kHz"}], "/.", "fitsurv1"}], 
     ")"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nbar1", "=", 
   FractionBox["1", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"\[Sigma]", " ", "A"}], "/.", "fitsurv1"}], 
      RowBox[{
       RowBox[{"\[Sigma]2", " ", "A2"}], "/.", "fitsurv1"}]], "-", "1"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nbar2", "=", 
    FractionBox["1", 
     RowBox[{
      FractionBox["ARSB2", "ABSB2"], "-", "1"}]]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"get", " ", "temp"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T1", "=", 
    RowBox[{
     RowBox[{"T", "/", "uK"}], "/.", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nbar1", "==", 
          FractionBox["1", 
           RowBox[{
            RowBox[{"Exp", "[", 
             FractionBox[
              RowBox[{"\[HBar]", " ", "2", "\[Pi]", " ", "f"}], 
              RowBox[{"kB", " ", "T"}]], "]"}], "-", "1"}]]}], "/.", 
         RowBox[{"f", "\[Rule]", "ftrap"}]}], ",", "T"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"get", " ", "%", "ground", " ", "state", " ", "occupation"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P01", "=", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["nbar", "n"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"nbar", "+", "1"}], ")"}], 
        RowBox[{"n", "+", "1"}]]], "/.", 
      RowBox[{"n", "\[Rule]", "0"}]}], "/.", 
     RowBox[{"nbar", "\[Rule]", "nbar1"}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<nbar1\>\"", ",", "\"\<nbar2\>\"", ",", "\"\<T1[uK]\>\"", ",", 
      "\"\<T2[uK]\>\"", ",", "\"\<P01\>\"", ",", "\"\<P02\>\""}], "}"}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nbar1", ",", "nbar2", ",", "T1", ",", "T2", ",", " ", "P01", ",", 
        "P02"}], "}"}], ",", ".01"}], "]"}]}], "\[IndentingNewLine]", "}"}], "//",
   "TableForm"}]}], "Input",
 CellChangeTimes->{{3.671248479973234*^9, 3.6712484824932375`*^9}, {
   3.6712489358968906`*^9, 3.671248953535916*^9}, {3.6712490604500737`*^9, 
   3.671249097553127*^9}, 3.67124929042441*^9, {3.6712500665067987`*^9, 
   3.6712501626160307`*^9}, {3.671250508712717*^9, 3.671250509992719*^9}, {
   3.6712507318580475`*^9, 3.6712507701081047`*^9}, {3.671250802949154*^9, 
   3.6712508551842313`*^9}, {3.671257136932109*^9, 3.67125719306919*^9}, {
   3.6712574117975082`*^9, 3.6712574463065586`*^9}, {3.6712575101056547`*^9, 
   3.6712575847857647`*^9}, {3.671257646553853*^9, 3.6712576468038535`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(Solve\\)\[NoBreak], so some solutions may not be found; use \
Reduce for complete solution information. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6712508120091667`*^9, 3.6712508561742325`*^9}, 
   3.671256749724547*^9, {3.67125717245216*^9, 3.6712571935591908`*^9}, {
   3.6712572240702353`*^9, 3.6712572335002484`*^9}, 3.671257297241341*^9, {
   3.671257431482537*^9, 3.6712574481085615`*^9}, {3.6712575128856583`*^9, 
   3.671257524908676*^9}, {3.671257639363843*^9, 3.671257655599867*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"nbar1\"\>", "\<\"nbar2\"\>", "\<\"T1[uK]\"\>", "\<\"T2[uK]\"\>", \
"\<\"P01\"\>", "\<\"P02\"\>"},
    {"1.3800000000000001`", "0.03`", "7.2`", "1.1`", "0.42`", "0.97`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.671248482753238*^9, {3.6712489360568905`*^9, 3.6712489546859174`*^9}, {
   3.6712490640200787`*^9, 3.6712490978131275`*^9}, 3.671249291374411*^9, 
   3.6712496599389143`*^9, 3.671250093724856*^9, 3.671250163006031*^9, {
   3.6712505115827217`*^9, 3.6712505372727594`*^9}, 3.6712507383190575`*^9, {
   3.6712508119891667`*^9, 3.6712508561442327`*^9}, 3.6712567496945467`*^9, {
   3.67125717247216*^9, 3.6712571935791907`*^9}, {3.671257224090235*^9, 
   3.6712572335202484`*^9}, 3.671257297261341*^9, {3.671257431502537*^9, 
   3.671257448128561*^9}, {3.6712575129056587`*^9, 3.6712575249286766`*^9}, {
   3.671257639363843*^9, 3.671257655599867*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
include errors, plot carrier alongside, estimate bkgrd for BSB2\
\>", "Chapter",
 CellChangeTimes->{{3.6712519083919125`*^9, 3.671251910251915*^9}, {
  3.671256762280569*^9, 3.6712567885736065`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Sigma]0", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nbar", "=", 
   FractionBox["1", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Sigma]", " ", "A"}], 
      RowBox[{"\[Sigma]2", " ", "A2"}]], "-", "1"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalDelta]nbar", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[PartialD]", "\[Sigma]"], "nbar"}], ")"}], "2"], 
         SuperscriptBox[
          RowBox[{"#", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[PartialD]", "A"], "nbar"}], ")"}], "2"], 
         SuperscriptBox[
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[PartialD]", "\[Sigma]2"], "nbar"}], ")"}], "2"], 
         SuperscriptBox[
          RowBox[{"#", "[", 
           RowBox[{"[", "7", "]"}], "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[PartialD]", "A2"], "nbar"}], ")"}], "2"], 
         SuperscriptBox[
          RowBox[{"#", "[", 
           RowBox[{"[", "5", "]"}], "]"}], "2"]}]}], ")"}]}], "&"}], "@", 
    RowBox[{"nlm", "[", "\"\<ParameterErrors\>\"", "]"}]}], "/.", 
   "fit"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<nbar=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"nbar", "/.", "fit"}], "]"}], "<>", "\"\<+/-\>\"", "<>", 
    RowBox[{"ToString", "[", "\[CapitalDelta]nbar", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6712523184025307`*^9, 3.67125237704062*^9}, {
  3.671252430625702*^9, 3.6712524506117306`*^9}}],

Cell[BoxData["0.8015188314790419`"], "Output",
 CellChangeTimes->{{3.671252368176607*^9, 3.6712523774006205`*^9}, 
   3.6712524510217314`*^9, 3.6712572349402504`*^9, 3.6712576569198685`*^9}],

Cell[BoxData["\<\"nbar=1.3817+/-0.801519\"\>"], "Print",
 CellChangeTimes->{{3.6712523131395235`*^9, 3.6712523774006205`*^9}, 
   3.6712524510217314`*^9, 3.6712572349402504`*^9, 3.6712576569198685`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["fit"], "Input",
 CellChangeTimes->{{3.671252348549577*^9, 3.6712523487695775`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"offs", "\[Rule]", "0.07230687628947376`"}], ",", 
   RowBox[{"A", "\[Rule]", 
    RowBox[{"-", "0.4810860501078659`"}]}], ",", 
   RowBox[{"f0", "\[Rule]", 
    RowBox[{"-", "79.69961165413177`"}]}], ",", 
   RowBox[{"\[Sigma]", "\[Rule]", "6.2405125749162105`"}], ",", 
   RowBox[{"A2", "\[Rule]", 
    RowBox[{"-", "0.2300703867090004`"}]}], ",", 
   RowBox[{"f02", "\[Rule]", "83.68314857628323`"}], ",", 
   RowBox[{"\[Sigma]2", "\[Rule]", "7.570228470506326`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.671252348889578*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"nbar", " ", "of", " ", "radial", " ", 
    RowBox[{"dir", ".", " ", "and"}], " ", "error", " ", "if", " ", "you", 
    " ", "have", " ", "rnr"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{"fitRNR", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dftrap", "=", 
      RowBox[{"1", " ", "kHz"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nbar", "=", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"Exp", "[", 
         FractionBox[
          RowBox[{"\[HBar]", " ", "2", "\[Pi]", " ", "f"}], 
          RowBox[{"kB", " ", "T"}]], "]"}], "-", "1"}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]nbar", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[PartialD]", "T"], "nbar"}], ")"}], "2"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"chisquareErr", " ", "uK"}], ")"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[PartialD]", "f"], "nbar"}], ")"}], "2"], 
            SuperscriptBox[
             RowBox[{"(", "dftrap", ")"}], "2"]}]}], ")"}]}], "/.", 
        RowBox[{"T", "\[Rule]", 
         RowBox[{"TBestFit", " ", "uK"}]}]}], "/.", 
       RowBox[{"f", "\[Rule]", "frad"}]}]}], ";"}]}]}]}]], "Input",
 CellChangeTimes->{{3.671252308799517*^9, 3.6712523111095204`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["fitsurv1"], "Input",
 CellChangeTimes->{{3.6712584228122945`*^9, 3.6712584240362964`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"offs", "\[Rule]", "0.07230687628947376`"}], ",", 
   RowBox[{"A", "\[Rule]", 
    RowBox[{"-", "0.4810860501078659`"}]}], ",", 
   RowBox[{"f0", "\[Rule]", 
    RowBox[{"-", "79.69961165413177`"}]}], ",", 
   RowBox[{"\[Sigma]", "\[Rule]", "6.2405125749162105`"}], ",", 
   RowBox[{"A2", "\[Rule]", 
    RowBox[{"-", "0.2300703867090004`"}]}], ",", 
   RowBox[{"f02", "\[Rule]", "83.68314857628323`"}], ",", 
   RowBox[{"\[Sigma]2", "\[Rule]", "7.570228470506326`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.671258424226297*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"fitBSB1", "\[IndentingNewLine]", "fitRSB1"}], "Input",
 CellChangeTimes->{{3.6712584366913147`*^9, 3.6712584432513237`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"offs", "\[Rule]", "0.05299232007909389`"}], ",", 
   RowBox[{"A", "\[Rule]", 
    RowBox[{"-", "0.2408921317355026`"}]}], ",", 
   RowBox[{"f0", "\[Rule]", "83.74931679165401`"}], ",", 
   RowBox[{"\[Sigma]", "\[Rule]", "8.708815698403894`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.671258439161318*^9, 3.671258443481324*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"offs", "\[Rule]", "0.09209743074953064`"}], ",", 
   RowBox[{"A", "\[Rule]", 
    RowBox[{"-", "0.4733929998276723`"}]}], ",", 
   RowBox[{"f0", "\[Rule]", 
    RowBox[{"-", "79.7856882467733`"}]}], ",", 
   RowBox[{"\[Sigma]", "\[Rule]", "5.731797916474155`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.671258439161318*^9, 3.671258443491324*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]]
},
WindowSize->{1920, 1118},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.3 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 386, 9, 358, "Chapter"],
Cell[969, 33, 1592, 48, 332, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2598, 86, 171, 2, 93, "Chapter"],
Cell[2772, 90, 20939, 609, 1465, "Input"],
Cell[23714, 701, 119, 2, 39, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[23870, 708, 162, 2, 78, "Chapter"],
Cell[CellGroupData[{
Cell[24057, 714, 1711, 54, 140, "Input"],
Cell[25771, 770, 19504, 397, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[45324, 1173, 187, 2, 96, "Title"],
Cell[CellGroupData[{
Cell[45536, 1179, 5885, 145, 730, "Input"],
Cell[51424, 1326, 49412, 891, 178, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100873, 2222, 96, 1, 93, "Chapter"],
Cell[100972, 2225, 2970, 98, 223, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103979, 2328, 103, 1, 93, "Chapter"],
Cell[CellGroupData[{
Cell[104107, 2333, 5266, 137, 590, "Input"],
Cell[109376, 2472, 78096, 1372, 331, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[187521, 3850, 99, 1, 93, "Chapter"],
Cell[CellGroupData[{
Cell[187645, 3855, 7026, 209, 990, "Input"],
Cell[194674, 4066, 953, 17, 29, "Message"],
Cell[195630, 4085, 955, 17, 29, "Message"],
Cell[196588, 4104, 913, 21, 74, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[197562, 4132, 185, 2, 131, "Title"],
Cell[CellGroupData[{
Cell[197772, 4138, 4490, 124, 602, "Input"],
Cell[202265, 4264, 29841, 531, 342, "Output"],
Cell[232109, 4797, 909, 23, 35, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233055, 4825, 103, 1, 93, "Chapter"],
Cell[CellGroupData[{
Cell[233183, 4830, 2522, 67, 165, "Input"],
Cell[235708, 4899, 53657, 953, 331, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[289414, 5858, 99, 1, 93, "Chapter"],
Cell[CellGroupData[{
Cell[289538, 5863, 3247, 88, 652, "Input"],
Cell[292788, 5953, 858, 15, 29, "Message"],
Cell[293649, 5970, 1356, 27, 74, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[295054, 6003, 209, 4, 93, "Chapter"],
Cell[CellGroupData[{
Cell[295288, 6011, 2039, 59, 193, "Input"],
Cell[297330, 6072, 190, 2, 39, "Output"],
Cell[297523, 6076, 202, 2, 28, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297762, 6083, 97, 1, 39, "Input"],
Cell[297862, 6086, 581, 13, 39, "Output"]
}, Open  ]],
Cell[298458, 6102, 1681, 43, 283, "Input"],
Cell[CellGroupData[{
Cell[300164, 6149, 104, 1, 39, "Input"],
Cell[300271, 6152, 581, 13, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300889, 6170, 139, 1, 65, "Input"],
Cell[301031, 6173, 381, 8, 39, "Output"],
Cell[301415, 6183, 400, 9, 39, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
